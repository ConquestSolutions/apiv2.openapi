{
  "swagger": "2.0",
  "info": {
    "title": "Conquest API v2",
    "version": "2"
  },
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/actions/apply_standard_action": {
      "post": {
        "operationId": "ApplyStandardAction",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiApplyStandardActionCommand"
            }
          }
        ],
        "tags": [
          "ActionService"
        ]
      }
    },
    "/api/actions/complete_action": {
      "post": {
        "operationId": "CompleteAction",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/conquest_apiCompleteActionResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiCompleteActionCommand"
            }
          }
        ],
        "tags": [
          "ActionService"
        ]
      }
    },
    "/api/actions/completion_details": {
      "post": {
        "operationId": "GetActionCompletionDetails",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/conquest_apiGetActionCompletionDetailsResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiGetActionCompletionDetailsRequest"
            }
          }
        ],
        "tags": [
          "ActionService"
        ]
      }
    },
    "/api/actions/create_succeeding_action": {
      "post": {
        "operationId": "CreateSucceedingAction",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiCreateSucceedingActionCommand"
            }
          }
        ],
        "tags": [
          "ActionService"
        ]
      }
    },
    "/api/actions/delete_action": {
      "post": {
        "operationId": "DeleteAction",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiDeleteActionCommand"
            }
          }
        ],
        "tags": [
          "ActionService"
        ]
      }
    },
    "/api/actions/move_action": {
      "post": {
        "operationId": "MoveAction",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiMoveActionCommand"
            }
          }
        ],
        "tags": [
          "ActionService"
        ]
      }
    },
    "/api/actions/reverse_action_completion": {
      "post": {
        "operationId": "ReverseActionCompletion",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/conquest_apiReverseActionCompletionResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiReverseActionCompletionCommand"
            }
          }
        ],
        "tags": [
          "ActionService"
        ]
      }
    },
    "/api/actions/update_action": {
      "post": {
        "operationId": "UpdateAction",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/conquest_apiChangeSetResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiActionRecordChangeSet"
            }
          }
        ],
        "tags": [
          "ActionService"
        ]
      }
    },
    "/api/actions/{value}": {
      "get": {
        "operationId": "GetAction",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/conquest_apiActionEntity"
            }
          }
        },
        "parameters": [
          {
            "name": "value",
            "description": "The int32 value.",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "ActionService"
        ]
      }
    },
    "/api/assets/change_asset_type": {
      "post": {
        "operationId": "ChangeAssetType",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiChangeAssetTypeCommand"
            }
          }
        ],
        "tags": [
          "AssetService"
        ]
      }
    },
    "/api/assets/create_action": {
      "post": {
        "operationId": "CreateAction",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiCreateActionForAssetCommand"
            }
          }
        ],
        "tags": [
          "AssetService"
        ]
      }
    },
    "/api/assets/create_asset": {
      "post": {
        "operationId": "CreateAsset",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiCreateAssetCommand"
            }
          }
        ],
        "tags": [
          "AssetService"
        ]
      }
    },
    "/api/assets/create_defect": {
      "post": {
        "operationId": "CreateDefect",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiCreateDefectForAssetCommand"
            }
          }
        ],
        "tags": [
          "AssetService"
        ]
      }
    },
    "/api/assets/delete_asset": {
      "post": {
        "operationId": "DeleteAsset",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiDeleteAssetCommand"
            }
          }
        ],
        "tags": [
          "AssetService"
        ]
      }
    },
    "/api/assets/list_inspections": {
      "post": {
        "operationId": "ListInspectionsForAsset",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/conquest_apiInspectionsForAssetResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiInspectionsForAssetQuery"
            }
          }
        ],
        "tags": [
          "AssetService"
        ]
      }
    },
    "/api/assets/move_asset": {
      "post": {
        "operationId": "MoveAsset",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiMoveAssetCommand"
            }
          }
        ],
        "tags": [
          "AssetService"
        ]
      }
    },
    "/api/assets/new_condition_inspection": {
      "post": {
        "operationId": "NewConditionInspection",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/conquest_apiObjectKey"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiNewConditionInspectionCommand"
            }
          }
        ],
        "tags": [
          "AssetService"
        ]
      }
    },
    "/api/assets/update_asset": {
      "post": {
        "operationId": "UpdateAsset",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/conquest_apiChangeSetResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiAssetRecordChangeSet"
            }
          }
        ],
        "tags": [
          "AssetService"
        ]
      }
    },
    "/api/assets/{value}": {
      "get": {
        "operationId": "GetAsset",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/conquest_apiAssetEntity"
            }
          }
        },
        "parameters": [
          {
            "name": "value",
            "description": "The int32 value.",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "AssetService"
        ]
      }
    },
    "/api/defects/calculate_defect_response_date": {
      "post": {
        "operationId": "CalculateDefectResponseDate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/conquest_apiCalculateDefectResponseDateResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiCalculateDefectResponseDateRequest"
            }
          }
        ],
        "tags": [
          "DefectService"
        ]
      }
    },
    "/api/defects/create_action": {
      "post": {
        "operationId": "CreateAction",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiCreateActionForDefectCommand"
            }
          }
        ],
        "tags": [
          "DefectService"
        ]
      }
    },
    "/api/defects/delete_defect": {
      "post": {
        "operationId": "DeleteDefect",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiDeleteDefectCommand"
            }
          }
        ],
        "tags": [
          "DefectService"
        ]
      }
    },
    "/api/defects/update_defect": {
      "post": {
        "operationId": "UpdateDefect",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/conquest_apiChangeSetResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiDefectRecordChangeSet"
            }
          }
        ],
        "tags": [
          "DefectService"
        ]
      }
    },
    "/api/defects/{value}": {
      "get": {
        "operationId": "GetDefect",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/conquest_apiDefectEntity"
            }
          }
        },
        "parameters": [
          {
            "name": "value",
            "description": "The int32 value.",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "DefectService"
        ]
      }
    },
    "/api/documents/add_diary": {
      "post": {
        "operationId": "AddDiary",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/conquest_apiAddDiaryResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiAddDiaryCommand"
            }
          }
        ],
        "tags": [
          "DocumentService"
        ]
      }
    },
    "/api/documents/add_document": {
      "post": {
        "operationId": "AddDocument",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/conquest_apiAddDocumentResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiAddDocumentCommand"
            }
          }
        ],
        "tags": [
          "DocumentService"
        ]
      }
    },
    "/api/documents/change_diary_content": {
      "post": {
        "operationId": "ChangeDiaryContent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/conquest_apiAddDiaryResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiChangeDiaryContentCommand"
            }
          }
        ],
        "tags": [
          "DocumentService"
        ]
      }
    },
    "/api/documents/change_document_content": {
      "post": {
        "operationId": "ChangeDocumentContent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/conquest_apiAddDocumentResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiChangeDocumentContentCommand"
            }
          }
        ],
        "tags": [
          "DocumentService"
        ]
      }
    },
    "/api/documents/generate_document_link": {
      "post": {
        "operationId": "GenerateDocumentLink",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/conquest_apiGenerateDocumentLinkResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiGenerateDocumentLinkCommand"
            }
          }
        ],
        "tags": [
          "DocumentService"
        ]
      }
    },
    "/api/documents/list": {
      "post": {
        "operationId": "GetDocuments",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/conquest_apiGetDocumentsResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiGetDocumentsQuery"
            }
          }
        ],
        "tags": [
          "DocumentService"
        ]
      }
    },
    "/api/documents/list_locations": {
      "post": {
        "operationId": "ListDocumentLocations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/conquest_apiListDocumentLocationsResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiListDocumentLocationsQuery"
            }
          }
        ],
        "tags": [
          "DocumentService"
        ]
      }
    },
    "/api/documents/remove_document": {
      "post": {
        "operationId": "RemoveDocument",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiRemoveDocumentCommand"
            }
          }
        ],
        "tags": [
          "DocumentService"
        ]
      }
    },
    "/api/find": {
      "post": {
        "operationId": "Find",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/conquest_apiFindResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiFindQuery"
            }
          }
        ],
        "tags": [
          "ViewService"
        ]
      }
    },
    "/api/jobs/current_state": {
      "post": {
        "operationId": "GetJobState",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/conquest_apiGetJobStateResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiGetJobStateRequest"
            }
          }
        ],
        "tags": [
          "JobsService"
        ]
      }
    },
    "/api/knowledge_base/describe_enumeration": {
      "post": {
        "operationId": "DescribeEnumeration",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/conquest_apiDescribeEnumerationResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiDescribeEnumerationRequest"
            }
          }
        ],
        "tags": [
          "KnowledgeBaseService"
        ]
      }
    },
    "/api/knowledge_base/list_attribute_sets": {
      "post": {
        "operationId": "ListAttributeSets",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/conquest_apiAttributeSetsResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiListAttributeSetsQuery"
            }
          }
        ],
        "tags": [
          "KnowledgeBaseService"
        ]
      }
    },
    "/api/knowledge_base/list_code_lists": {
      "post": {
        "operationId": "GetCodeLists",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/conquest_apiGetCodeListsResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiGetCodeListsQuery"
            }
          }
        ],
        "tags": [
          "KnowledgeBaseService"
        ]
      }
    },
    "/api/knowledge_base/list_field_names_for_attribute_set": {
      "post": {
        "operationId": "GetAttributeSetFieldNames",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/conquest_apiGetAttributeSetFieldNamesResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {}
            }
          }
        ],
        "tags": [
          "KnowledgeBaseService"
        ]
      }
    },
    "/api/knowledge_base/list_standard_actions": {
      "post": {
        "operationId": "ListStandardActions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/conquest_apiListStandardActionsResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiListStandardActionsQuery"
            }
          }
        ],
        "tags": [
          "KnowledgeBaseService"
        ]
      }
    },
    "/api/knowledge_base/list_standard_defect_responses": {
      "post": {
        "operationId": "ListStandardDefectResponses",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/conquest_apiListStandardDefectResponsesResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiListStandardDefectResponsesQuery"
            }
          }
        ],
        "tags": [
          "KnowledgeBaseService"
        ]
      }
    },
    "/api/knowledge_base/list_view_fields_for_context": {
      "post": {
        "operationId": "ListViewFields",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/conquest_apiViewContext"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiListViewFieldsQuery"
            }
          }
        ],
        "tags": [
          "KnowledgeBaseService"
        ]
      }
    },
    "/api/list_filters": {
      "post": {
        "operationId": "ListFilters",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/conquest_apiListFiltersResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiListFiltersQuery"
            }
          }
        ],
        "tags": [
          "ViewService"
        ]
      }
    },
    "/api/list_hierarchy_nodes": {
      "post": {
        "operationId": "ListHierarchyNodes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/conquest_apiObjectHeadersResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiListHierarchyNodesQuery"
            }
          }
        ],
        "tags": [
          "ViewService"
        ]
      }
    },
    "/api/profile/history_items": {
      "post": {
        "operationId": "GetHistoryItems",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/conquest_apiGetHistoryItemsResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiGetHistoryItemsQuery"
            }
          }
        ],
        "tags": [
          "ProfileService"
        ]
      }
    },
    "/api/profile/preferences": {
      "post": {
        "operationId": "GetUserPreferences",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/conquest_apiGetUserPreferencesResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiGetUserPreferencesQuery"
            }
          }
        ],
        "tags": [
          "ProfileService"
        ]
      }
    },
    "/api/profile/update_preferences": {
      "post": {
        "operationId": "UpdateUserPreferences",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiUpdateUserPreferencesCommand"
            }
          }
        ],
        "tags": [
          "ProfileService"
        ]
      }
    },
    "/api/requests/create_request": {
      "post": {
        "operationId": "CreateRequest",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiCreateRequestCommand"
            }
          }
        ],
        "tags": [
          "RequestService"
        ]
      }
    },
    "/api/requests/delete_request": {
      "post": {
        "operationId": "DeleteRequest",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiDeleteRequestCommand"
            }
          }
        ],
        "tags": [
          "RequestService"
        ]
      }
    },
    "/api/requests/update_request": {
      "post": {
        "operationId": "UpdateRequest",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/conquest_apiChangeSetResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiRequestRecordChangeSet"
            }
          }
        ],
        "tags": [
          "RequestService"
        ]
      }
    },
    "/api/requests/{value}": {
      "get": {
        "operationId": "GetRequest",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/conquest_apiRequestEntity"
            }
          }
        },
        "parameters": [
          {
            "name": "value",
            "description": "The int32 value.",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "RequestService"
        ]
      }
    },
    "/api/security/account_permissions": {
      "post": {
        "operationId": "GetAccountPermissions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/conquest_apiAccountPermissions"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiGetAccountPermissionsQuery"
            }
          }
        ],
        "tags": [
          "SecurityService"
        ]
      }
    },
    "/api/security/permissions_for_object": {
      "post": {
        "operationId": "PermissionsForObject",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/conquest_apiEffectivePermission"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiPermissionsForObjectQuery"
            }
          }
        ],
        "tags": [
          "SecurityService"
        ]
      }
    },
    "/api/security/set_permissions": {
      "post": {
        "operationId": "SetPermissions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiSetPermissionsCommand"
            }
          }
        ],
        "tags": [
          "SecurityService"
        ]
      }
    },
    "/api/system/connections": {
      "get": {
        "operationId": "DatabaseConnections",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/conquest_apiDatabaseConnectionNamesResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "Dummy",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "SystemService"
        ]
      }
    },
    "/api/system/version": {
      "get": {
        "operationId": "ApplicationVersion",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/conquest_apiSystemVersionResponse"
            }
          }
        },
        "tags": [
          "SystemService"
        ]
      }
    },
    "/api/system/whoami": {
      "get": {
        "operationId": "WhoAmI",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/conquest_apiWhoAmIResponse"
            }
          }
        },
        "tags": [
          "SystemService"
        ]
      }
    }
  },
  "definitions": {
    "conquest_apiAccountID": {
      "type": "object",
      "properties": {
        "AccountType": {
          "$ref": "#/definitions/conquest_apiAccountType"
        },
        "AccountName": {
          "type": "string"
        }
      }
    },
    "conquest_apiAccountPermissions": {
      "type": "object",
      "properties": {
        "AccountID": {
          "$ref": "#/definitions/conquest_apiAccountID"
        },
        "FacilityPermission": {
          "$ref": "#/definitions/conquest_apiFacilityPermission"
        },
        "ObjectPermisions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/conquest_apiObjectPermission"
          }
        },
        "TypePermisions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/conquest_apiTypePermission"
          }
        }
      }
    },
    "conquest_apiAccountType": {
      "type": "string",
      "enum": [
        "AccountType_Unknown",
        "AccountType_User",
        "AccountType_Group"
      ],
      "default": "AccountType_Unknown"
    },
    "conquest_apiActionCompletionDetails": {
      "type": "object",
      "properties": {
        "Action": {
          "$ref": "#/definitions/conquest_apiObjectHeader"
        },
        "Asset": {
          "$ref": "#/definitions/conquest_apiObjectHeader"
        },
        "ActionType": {
          "$ref": "#/definitions/conquest_apiActionType"
        },
        "EstimatedCost": {
          "$ref": "#/definitions/conquest_apiDecimal"
        },
        "ActualCost": {
          "$ref": "#/definitions/conquest_apiDecimal"
        }
      }
    },
    "conquest_apiActionCompletionOptions": {
      "type": "object",
      "properties": {
        "ActionID": {
          "type": "integer",
          "format": "int32"
        },
        "MarkAsCompleted": {
          "type": "boolean",
          "format": "boolean"
        },
        "CompletionDate": {
          "type": "string",
          "format": "date-time",
          "title": "CompletionDate is used to set a completion date other than \"now\""
        },
        "CompletionNotes": {
          "type": "string"
        },
        "CompletedBy": {
          "type": "string",
          "description": "CompletedBy is used to choose a different user to the one completing the action."
        },
        "CostType": {
          "$ref": "#/definitions/conquest_apiCostType"
        },
        "Cost": {
          "$ref": "#/definitions/conquest_apiDecimalValue"
        },
        "ResponseDate": {
          "type": "string",
          "format": "date-time"
        },
        "UseDefaultsProcess": {
          "type": "boolean",
          "format": "boolean"
        },
        "SimpleProcess": {
          "$ref": "#/definitions/conquest_apiSimpleActionCompletionProcess"
        },
        "MasterProcess": {
          "$ref": "#/definitions/conquest_apiMasterActionCompletionProcess"
        },
        "LogBookProcess": {
          "$ref": "#/definitions/conquest_apiLogBookActionCompletionProcess"
        },
        "CyclicProcess": {
          "$ref": "#/definitions/conquest_apiCyclicActionCompletionProcess"
        },
        "DisposalProcess": {
          "$ref": "#/definitions/conquest_apiDisposalActionCompletionProcess"
        },
        "CopyUserFieldsToSucceedingActions": {
          "type": "boolean",
          "format": "boolean",
          "title": "CopyUserFieldsToSucceedingActions is used to override the preference already set on the action"
        },
        "CopyDocumentsToSucceedingActions": {
          "type": "boolean",
          "format": "boolean",
          "title": "CopyDocumentsToSucceedingActions is used to override the preference already set on the action"
        }
      }
    },
    "conquest_apiActionEntity": {
      "type": "object",
      "properties": {
        "ActionID": {
          "type": "integer",
          "format": "int32"
        },
        "Record": {
          "$ref": "#/definitions/conquest_apiActionRecord"
        },
        "AttributeID": {
          "type": "integer",
          "format": "int32"
        },
        "AssetID": {
          "type": "integer",
          "format": "int32"
        },
        "TypeID": {
          "type": "integer",
          "format": "int32"
        },
        "Permission": {
          "$ref": "#/definitions/conquest_apiPermission"
        },
        "ReferenceID": {
          "type": "string"
        },
        "PreviousAction": {
          "type": "integer",
          "format": "int32"
        },
        "ApprovalRequested": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "IssueDate": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "CreatedBy": {
          "type": "string",
          "title": "TimestampValue              EntryDate           = 24; is like AddingUser"
        },
        "Editor": {
          "type": "string"
        },
        "EditDate": {
          "type": "string",
          "format": "date-time"
        },
        "lock": {
          "$ref": "#/definitions/conquest_apiLock"
        },
        "Completed": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "conquest_apiActionRecord": {
      "type": "object",
      "properties": {
        "Account": {
          "type": "string"
        },
        "CategoryID": {
          "type": "integer",
          "format": "int32"
        },
        "ActionDescription": {
          "type": "string"
        },
        "ActionNotes": {
          "type": "string"
        },
        "ActionType": {
          "$ref": "#/definitions/conquest_apiActionType"
        },
        "Urgency": {
          "type": "integer",
          "format": "int32"
        },
        "ContractorID": {
          "type": "integer",
          "format": "int32"
        },
        "SubContractorID": {
          "type": "integer",
          "format": "int32"
        },
        "ContractNumber": {
          "type": "string"
        },
        "OrganisationUnitID": {
          "type": "integer",
          "format": "int32"
        },
        "FinishDate": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "Location": {
          "type": "string"
        },
        "LocationID": {
          "type": "integer",
          "format": "int32"
        },
        "NewWorks": {
          "type": "boolean",
          "format": "boolean"
        },
        "NextTask": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "OrderNo": {
          "type": "string"
        },
        "ParentID": {
          "type": "integer",
          "format": "int32"
        },
        "PO": {
          "type": "string"
        },
        "Rehabilitation": {
          "type": "boolean",
          "format": "boolean"
        },
        "Repeatable": {
          "type": "boolean",
          "format": "boolean"
        },
        "ResponseDate": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "StartDate": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "Status": {
          "type": "integer",
          "format": "int32"
        },
        "StdActionID": {
          "type": "integer",
          "format": "int32"
        },
        "UserCheck1": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck2": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck3": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck4": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck5": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck6": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck7": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck8": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck9": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck10": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck11": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck12": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck13": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck14": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck15": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck16": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck17": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck18": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck19": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck20": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck21": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck22": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck23": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck24": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck25": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck26": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck27": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck28": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck29": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck30": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserDate1": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate2": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate3": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate4": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate5": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate6": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate7": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate8": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate9": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate10": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate11": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate12": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate13": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate14": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate15": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate16": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate17": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate18": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate19": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate20": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate21": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate22": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate23": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate24": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate25": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate26": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate27": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate28": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate29": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate30": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserList1": {
          "type": "integer",
          "format": "int32"
        },
        "UserList2": {
          "type": "integer",
          "format": "int32"
        },
        "UserList3": {
          "type": "integer",
          "format": "int32"
        },
        "UserList4": {
          "type": "integer",
          "format": "int32"
        },
        "UserList5": {
          "type": "integer",
          "format": "int32"
        },
        "UserList6": {
          "type": "integer",
          "format": "int32"
        },
        "UserList7": {
          "type": "integer",
          "format": "int32"
        },
        "UserList8": {
          "type": "integer",
          "format": "int32"
        },
        "UserList9": {
          "type": "integer",
          "format": "int32"
        },
        "UserList10": {
          "type": "integer",
          "format": "int32"
        },
        "UserList11": {
          "type": "integer",
          "format": "int32"
        },
        "UserList12": {
          "type": "integer",
          "format": "int32"
        },
        "UserList13": {
          "type": "integer",
          "format": "int32"
        },
        "UserList14": {
          "type": "integer",
          "format": "int32"
        },
        "UserList15": {
          "type": "integer",
          "format": "int32"
        },
        "UserList16": {
          "type": "integer",
          "format": "int32"
        },
        "UserList17": {
          "type": "integer",
          "format": "int32"
        },
        "UserList18": {
          "type": "integer",
          "format": "int32"
        },
        "UserList19": {
          "type": "integer",
          "format": "int32"
        },
        "UserList20": {
          "type": "integer",
          "format": "int32"
        },
        "UserList21": {
          "type": "integer",
          "format": "int32"
        },
        "UserList22": {
          "type": "integer",
          "format": "int32"
        },
        "UserList23": {
          "type": "integer",
          "format": "int32"
        },
        "UserList24": {
          "type": "integer",
          "format": "int32"
        },
        "UserList25": {
          "type": "integer",
          "format": "int32"
        },
        "UserList26": {
          "type": "integer",
          "format": "int32"
        },
        "UserList27": {
          "type": "integer",
          "format": "int32"
        },
        "UserList28": {
          "type": "integer",
          "format": "int32"
        },
        "UserList29": {
          "type": "integer",
          "format": "int32"
        },
        "UserList30": {
          "type": "integer",
          "format": "int32"
        },
        "UserNumber1": {
          "type": "number",
          "format": "double"
        },
        "UserNumber2": {
          "type": "number",
          "format": "double"
        },
        "UserNumber3": {
          "type": "number",
          "format": "double"
        },
        "UserNumber4": {
          "type": "number",
          "format": "double"
        },
        "UserNumber5": {
          "type": "number",
          "format": "double"
        },
        "UserNumber6": {
          "type": "number",
          "format": "double"
        },
        "UserNumber7": {
          "type": "number",
          "format": "double"
        },
        "UserNumber8": {
          "type": "number",
          "format": "double"
        },
        "UserNumber9": {
          "type": "number",
          "format": "double"
        },
        "UserNumber10": {
          "type": "number",
          "format": "double"
        },
        "UserNumber11": {
          "type": "number",
          "format": "double"
        },
        "UserNumber12": {
          "type": "number",
          "format": "double"
        },
        "UserNumber13": {
          "type": "number",
          "format": "double"
        },
        "UserNumber14": {
          "type": "number",
          "format": "double"
        },
        "UserNumber15": {
          "type": "number",
          "format": "double"
        },
        "UserNumber16": {
          "type": "number",
          "format": "double"
        },
        "UserNumber17": {
          "type": "number",
          "format": "double"
        },
        "UserNumber18": {
          "type": "number",
          "format": "double"
        },
        "UserNumber19": {
          "type": "number",
          "format": "double"
        },
        "UserNumber20": {
          "type": "number",
          "format": "double"
        },
        "UserNumber21": {
          "type": "number",
          "format": "double"
        },
        "UserNumber22": {
          "type": "number",
          "format": "double"
        },
        "UserNumber23": {
          "type": "number",
          "format": "double"
        },
        "UserNumber24": {
          "type": "number",
          "format": "double"
        },
        "UserNumber25": {
          "type": "number",
          "format": "double"
        },
        "UserNumber26": {
          "type": "number",
          "format": "double"
        },
        "UserNumber27": {
          "type": "number",
          "format": "double"
        },
        "UserNumber28": {
          "type": "number",
          "format": "double"
        },
        "UserNumber29": {
          "type": "number",
          "format": "double"
        },
        "UserNumber30": {
          "type": "number",
          "format": "double"
        },
        "UserText1": {
          "type": "string"
        },
        "UserText2": {
          "type": "string"
        },
        "UserText3": {
          "type": "string"
        },
        "UserText4": {
          "type": "string"
        },
        "UserText5": {
          "type": "string"
        },
        "UserText6": {
          "type": "string"
        },
        "UserText7": {
          "type": "string"
        },
        "UserText8": {
          "type": "string"
        },
        "UserText9": {
          "type": "string"
        },
        "UserText10": {
          "type": "string"
        },
        "UserText11": {
          "type": "string"
        },
        "UserText12": {
          "type": "string"
        },
        "UserText13": {
          "type": "string"
        },
        "UserText14": {
          "type": "string"
        },
        "UserText15": {
          "type": "string"
        },
        "UserText16": {
          "type": "string"
        },
        "UserText17": {
          "type": "string"
        },
        "UserText18": {
          "type": "string"
        },
        "UserText19": {
          "type": "string"
        },
        "UserText20": {
          "type": "string"
        },
        "UserText21": {
          "type": "string"
        },
        "UserText22": {
          "type": "string"
        },
        "UserText23": {
          "type": "string"
        },
        "UserText24": {
          "type": "string"
        },
        "UserText25": {
          "type": "string"
        },
        "UserText26": {
          "type": "string"
        },
        "UserText27": {
          "type": "string"
        },
        "UserText28": {
          "type": "string"
        },
        "UserText29": {
          "type": "string"
        },
        "UserText30": {
          "type": "string"
        },
        "LocationCoordinates": {
          "$ref": "#/definitions/conquest_apiGeographyCoordinatesValue",
          "title": "LocationCoordinates is a pin/point that defaults to the centroid on the Asset's geography object"
        }
      }
    },
    "conquest_apiActionRecordChangeSet": {
      "type": "object",
      "properties": {
        "ActionID": {
          "type": "integer",
          "format": "int32"
        },
        "LastEdit": {
          "type": "string",
          "format": "date-time"
        },
        "Changes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Original": {
          "$ref": "#/definitions/conquest_apiActionRecord"
        },
        "Updated": {
          "$ref": "#/definitions/conquest_apiActionRecord"
        }
      }
    },
    "conquest_apiActionType": {
      "type": "string",
      "enum": [
        "ActionType_Unscheduled",
        "ActionType_Scheduled",
        "ActionType_Cyclic",
        "ActionType_Disposal",
        "ActionType_LogBook",
        "ActionType_NewWorks",
        "ActionType_Purchase",
        "ActionType_Warranty",
        "ActionType_Litigation",
        "ActionType_Planned",
        "ActionType_Project",
        "ActionType_Master",
        "ActionType_Unknown"
      ],
      "default": "ActionType_Unscheduled"
    },
    "conquest_apiAddDiaryCommand": {
      "type": "object",
      "properties": {
        "ObjectKey": {
          "$ref": "#/definitions/conquest_apiObjectKey"
        },
        "CreateTime": {
          "type": "string",
          "format": "date-time",
          "description": "CreateTime is unique. When adding a document, there is no DocumentID yet, the CreateTime should be used as a key until the DocumentID is retrieved."
        },
        "Content": {
          "type": "string"
        }
      }
    },
    "conquest_apiAddDiaryResult": {
      "type": "object",
      "properties": {
        "Document": {
          "$ref": "#/definitions/conquest_apiDocument",
          "title": "The Document for a Diary will have ContentType = application/vnd.conquest.diarynote+markdown"
        }
      }
    },
    "conquest_apiAddDocumentCommand": {
      "type": "object",
      "properties": {
        "ObjectKey": {
          "$ref": "#/definitions/conquest_apiObjectKey"
        },
        "DocumentDescription": {
          "type": "string"
        },
        "LinkExistingDocument": {
          "type": "boolean",
          "format": "boolean"
        },
        "Address": {
          "type": "string",
          "description": "Address is a URI with a supported scheme (blob://, file://, https://, conquest://, trim://).\n\n- URIs use the canonical '/' path separator (not '\\').\n\n- If the path component of a URI contains hex encoded characters, eg. '%20' for a space ' ', the path will be decoded and saved as ' '.\n\n- The [blob://] scheme represents a filesystem that is managed by Conquest. This is the scheme used in \"conquest.live\"\n  All urls take the form 'blob:/${configured-container}/path/to/file.txt'\n\n- The [conquest://] scheme provides a way to encode links to Conquest Objects and Views. See the documentation to learn\n  how to construct a conquest link. (TODO documentation link, conquest://? is an alias for \"https://link.conquest.live/?\")\n\n- The [https://] scheme can be used to link websites, \"http\" is not supported.\n\n- The [file://] scheme is not available in \"conquest.live\", it is the default for in-house installations.\n\n- When a [file://] scheme is used to *submit* a document, it refers to a location available on the API Server filesystem. Only configured locations will be accepted.\n  A configured location takes the form: 'file://${configured-location}/path/to/file.txt'\n\n- When *submitting* and *serving*, \"conquest_documents\", is a configured location for the [file://] scheme:\n    - \"conquest_documents\" points to the Conquest Document directory\n      For example:\n        \"file://conquest_documents/relative/path/file.txt\" will point to\n        \"${ConquestDocumentDirectory}/relative/path/file.txt\n\n[Special handling]: For local filesystem paths are as follows. Consumers of the API / End-User apps cannot use local filesystem paths.\n\n- The [file://] scheme is used to *serve* a file, it refers to a location available on the API Server filesystem.\n\n     - If a [file://] scheme uses the prefix \"file://MACHINE/\", this path path aligns with the underlying filesystem.\n       For example: \"file://MACHINE/shared/folder/file.txt\" translates to the UNC path \"\\\\MACHINE\\shared\\folder\\test.txt\"\n\n     - \"file://MACHINE/\" locations cannot be submitted via. the API.\n\nAddress is a protected property. It is not exposed to the end-user in subsequent requests. To reference this document\nuse the returned Document.DocumentID"
        },
        "ContentType": {
          "type": "string"
        },
        "CreateTime": {
          "type": "string",
          "format": "date-time",
          "description": "CreateTime is unique. When adding a document, there is no DocumentID yet, the CreateTime should be used as a key until the DocumentID is retrieved."
        },
        "Hashes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of calculated hashes / checksum of the file to be uploaded."
        },
        "ContentLength": {
          "type": "string",
          "format": "int64"
        }
      },
      "title": "AddDocumentCommand works in two steps, first you add a record using this command. The command may return AddDocumentCommand.UploadURI\nuse that URI to post file content. See AddDocumentResult"
    },
    "conquest_apiAddDocumentResult": {
      "type": "object",
      "properties": {
        "Document": {
          "$ref": "#/definitions/conquest_apiDocument"
        },
        "UploadUri": {
          "type": "string",
          "description": "UploadUri is where you must post the UploadData.\nIt is a multipart HTTP upload with the field \"document\"\nfor which the document is uploaded to.\n\nFor example, you can upload 'inspection-photo.png' like this for a standard web form\n```\n  curl -i -X POST -H \"Content-Type: multipart/form-data\" -F \"document=@inspection-photo.png\" \"${ApiHost}${UploadUri}\"\n```\n\nAlternatively, use if no metadata needs to be submitted.\n```\n  curl --upload-file \"${ApiHost}${UploadUri}\"\n```\n\nIf the Uri is relative, prefix it with the api origin.\n\nUploadUri will be empty if:\n- The Added Document was a link to an existing document (LinkExistingDocument=true)\n- The Document Link is not relative to one of the Document Locations (see GetHierarchyNodesQuery{ObjectType=DocumentContainer})"
        },
        "UploadMethod": {
          "type": "string",
          "title": "POST for a web form or PUT to just push the data"
        },
        "UploadExpireTime": {
          "type": "string",
          "format": "date-time"
        },
        "UploadHeaders": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "UploadHeaders returns some required headers, like \"x-ms-blob-type: BlockBlob\" for azure uploads"
        }
      },
      "description": "AddDocumentResult returns the saved Document record and the location (UploadMethod \u0026 UploadUri) of where the actual file should be pushed (POST/PUT).\n\nThe location may point to the API server itself, or a configured blob storage service.\n\nThis location is valid for a period of time or until the upload has completed. Whichever is earliest.\n\nWhen a client performs an upload, it prepares a request that will write the file to the provided location. If the location *may* require credentials."
    },
    "conquest_apiAnyValue": {
      "type": "object",
      "properties": {
        "stringValue": {
          "type": "string"
        },
        "nStringValue": {
          "type": "string"
        },
        "booleanValue": {
          "type": "boolean",
          "format": "boolean"
        },
        "nBooleanValue": {
          "type": "string"
        },
        "numberValue": {
          "type": "number",
          "format": "double"
        },
        "nNumberValue": {
          "type": "number",
          "format": "double"
        },
        "int32Value": {
          "type": "integer",
          "format": "int32"
        },
        "nInt32Value": {
          "type": "integer",
          "format": "int32"
        },
        "int64Value": {
          "type": "string",
          "format": "int64"
        },
        "nInt64Value": {
          "type": "string",
          "format": "int64"
        },
        "decimalValue": {
          "$ref": "#/definitions/conquest_apiDecimal"
        },
        "nDecimalValue": {
          "$ref": "#/definitions/conquest_apiDecimalValue"
        },
        "dateValue": {
          "type": "string",
          "format": "date-time"
        },
        "nDateValue": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "dateTimeValue": {
          "type": "string",
          "format": "date-time"
        },
        "nDateTimeValue": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "durationValue": {
          "$ref": "#/definitions/conquest_apiDuration"
        },
        "nDurationValue": {
          "$ref": "#/definitions/conquest_apiDurationValue"
        },
        "codeValue": {
          "type": "integer",
          "format": "int32"
        },
        "nCodeValue": {
          "type": "integer",
          "format": "int32"
        },
        "hierarchyValue": {
          "$ref": "#/definitions/conquest_apiObjectKey"
        },
        "nHierarchyValue": {
          "$ref": "#/definitions/conquest_apiObjectKeyValue"
        },
        "objectKeyValue": {
          "$ref": "#/definitions/conquest_apiObjectKey"
        },
        "nObjectKeyValue": {
          "$ref": "#/definitions/conquest_apiObjectKeyValue"
        },
        "enumerationValue": {
          "type": "integer",
          "format": "int32"
        },
        "nEnumerationValue": {
          "type": "integer",
          "format": "int32"
        },
        "stringListValue": {
          "$ref": "#/definitions/conquest_apiStringList"
        },
        "geographyCoordinatesValue": {
          "$ref": "#/definitions/conquest_apiGeographyCoordinates"
        },
        "nGeographyCoordinatesValue": {
          "$ref": "#/definitions/conquest_apiGeographyCoordinatesValue"
        },
        "uuidValue": {
          "$ref": "#/definitions/conquest_apiUUID"
        },
        "nUuidValue": {
          "$ref": "#/definitions/conquest_apiUUIDValue"
        },
        "uriValue": {
          "$ref": "#/definitions/conquest_apiUri"
        },
        "nUriValue": {
          "$ref": "#/definitions/conquest_apiUriValue"
        },
        "unknownValue": {
          "type": "boolean",
          "format": "boolean"
        }
      },
      "title": "Each field corresponds to exactly ValueType\nFor example:\n  stringValue and nStringValue (nullable) is for ValueType_String"
    },
    "conquest_apiApplyStandardActionCommand": {
      "type": "object",
      "properties": {
        "ActionID": {
          "type": "integer",
          "format": "int32"
        },
        "StdActionID": {
          "type": "integer",
          "format": "int32"
        },
        "Overwrite": {
          "type": "boolean",
          "format": "boolean"
        },
        "OverwriteOptions": {
          "$ref": "#/definitions/conquest_apiApplyStandardActionOverwriteOptions"
        }
      }
    },
    "conquest_apiApplyStandardActionOverwriteOptions": {
      "type": "object",
      "properties": {
        "ActionDescription": {
          "type": "boolean",
          "format": "boolean"
        },
        "Account": {
          "type": "boolean",
          "format": "boolean"
        },
        "ActionNotes": {
          "type": "boolean",
          "format": "boolean"
        },
        "ActionType": {
          "type": "boolean",
          "format": "boolean"
        },
        "AssignTo": {
          "type": "boolean",
          "format": "boolean"
        },
        "Urgency": {
          "type": "boolean",
          "format": "boolean"
        },
        "ActionCategory": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "conquest_apiAssetEntity": {
      "type": "object",
      "properties": {
        "AssetID": {
          "type": "integer",
          "format": "int32"
        },
        "Record": {
          "$ref": "#/definitions/conquest_apiAssetRecord"
        },
        "ParentID": {
          "type": "integer",
          "format": "int32",
          "title": "ParentID is 0 if this is a Facility"
        },
        "AttributeID": {
          "type": "integer",
          "format": "int32",
          "title": "AttributeID for the AttributeSet configured on the AssetType"
        },
        "Status": {
          "type": "string"
        },
        "Permission": {
          "$ref": "#/definitions/conquest_apiPermission",
          "title": "string FamilyCode = 49;"
        },
        "ActionPermission": {
          "$ref": "#/definitions/conquest_apiPermission"
        },
        "DefectPermission": {
          "$ref": "#/definitions/conquest_apiPermission"
        },
        "SplitAssetID": {
          "type": "integer",
          "format": "int32"
        },
        "RetirementDate": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "RetirementUser": {
          "type": "string"
        },
        "RetirementReason": {
          "type": "string"
        },
        "ReplacedAsset": {
          "type": "integer",
          "format": "int32"
        },
        "AddingUser": {
          "type": "string"
        },
        "AddingDate": {
          "type": "string",
          "format": "date-time"
        },
        "Editor": {
          "type": "string"
        },
        "EditDate": {
          "type": "string",
          "format": "date-time"
        },
        "InspectionID": {
          "type": "integer",
          "format": "int32"
        },
        "InspectionNotes": {
          "type": "string"
        },
        "lock": {
          "$ref": "#/definitions/conquest_apiLock"
        }
      },
      "title": "AssetEntity is comprised of the Asset's Record and auxiliary fields (calculated, related)"
    },
    "conquest_apiAssetInspectionEntity": {
      "type": "object",
      "properties": {
        "AssetInspectionID": {
          "type": "integer",
          "format": "int32"
        },
        "Record": {
          "$ref": "#/definitions/conquest_apiAssetInspectionRecord"
        },
        "AssetID": {
          "type": "integer",
          "format": "int32"
        },
        "StdInspectionID": {
          "type": "integer",
          "format": "int32"
        },
        "AttributeID": {
          "type": "integer",
          "format": "int32"
        },
        "Editor": {
          "type": "string"
        },
        "EditDate": {
          "type": "string",
          "format": "date-time"
        },
        "InspectionID": {
          "type": "integer",
          "format": "int32"
        },
        "lock": {
          "$ref": "#/definitions/conquest_apiLock"
        }
      },
      "title": "AssetInspectionEntity is comprised of the Asset Inspection's Record and auxiliary fields (calculated, related)"
    },
    "conquest_apiAssetInspectionRecord": {
      "type": "object",
      "properties": {
        "InspectionNotes": {
          "type": "string"
        },
        "UserText1": {
          "type": "string"
        },
        "UserText2": {
          "type": "string"
        },
        "UserText3": {
          "type": "string"
        },
        "UserText4": {
          "type": "string"
        },
        "UserText5": {
          "type": "string"
        },
        "UserText6": {
          "type": "string"
        },
        "UserText7": {
          "type": "string"
        },
        "UserText8": {
          "type": "string"
        },
        "UserText9": {
          "type": "string"
        },
        "UserText10": {
          "type": "string"
        },
        "UserText11": {
          "type": "string"
        },
        "UserText12": {
          "type": "string"
        },
        "UserText13": {
          "type": "string"
        },
        "UserText14": {
          "type": "string"
        },
        "UserText15": {
          "type": "string"
        },
        "UserText16": {
          "type": "string"
        },
        "UserText17": {
          "type": "string"
        },
        "UserText18": {
          "type": "string"
        },
        "UserText19": {
          "type": "string"
        },
        "UserText20": {
          "type": "string"
        },
        "UserText21": {
          "type": "string"
        },
        "UserText22": {
          "type": "string"
        },
        "UserText23": {
          "type": "string"
        },
        "UserText24": {
          "type": "string"
        },
        "UserText25": {
          "type": "string"
        },
        "UserText26": {
          "type": "string"
        },
        "UserText27": {
          "type": "string"
        },
        "UserText28": {
          "type": "string"
        },
        "UserText29": {
          "type": "string"
        },
        "UserText30": {
          "type": "string"
        },
        "UserNumber1": {
          "type": "number",
          "format": "double"
        },
        "UserNumber2": {
          "type": "number",
          "format": "double"
        },
        "UserNumber3": {
          "type": "number",
          "format": "double"
        },
        "UserNumber4": {
          "type": "number",
          "format": "double"
        },
        "UserNumber5": {
          "type": "number",
          "format": "double"
        },
        "UserNumber6": {
          "type": "number",
          "format": "double"
        },
        "UserNumber7": {
          "type": "number",
          "format": "double"
        },
        "UserNumber8": {
          "type": "number",
          "format": "double"
        },
        "UserNumber9": {
          "type": "number",
          "format": "double"
        },
        "UserNumber10": {
          "type": "number",
          "format": "double"
        },
        "UserNumber11": {
          "type": "number",
          "format": "double"
        },
        "UserNumber12": {
          "type": "number",
          "format": "double"
        },
        "UserNumber13": {
          "type": "number",
          "format": "double"
        },
        "UserNumber14": {
          "type": "number",
          "format": "double"
        },
        "UserNumber15": {
          "type": "number",
          "format": "double"
        },
        "UserNumber16": {
          "type": "number",
          "format": "double"
        },
        "UserNumber17": {
          "type": "number",
          "format": "double"
        },
        "UserNumber18": {
          "type": "number",
          "format": "double"
        },
        "UserNumber19": {
          "type": "number",
          "format": "double"
        },
        "UserNumber20": {
          "type": "number",
          "format": "double"
        },
        "UserNumber21": {
          "type": "number",
          "format": "double"
        },
        "UserNumber22": {
          "type": "number",
          "format": "double"
        },
        "UserNumber23": {
          "type": "number",
          "format": "double"
        },
        "UserNumber24": {
          "type": "number",
          "format": "double"
        },
        "UserNumber25": {
          "type": "number",
          "format": "double"
        },
        "UserNumber26": {
          "type": "number",
          "format": "double"
        },
        "UserNumber27": {
          "type": "number",
          "format": "double"
        },
        "UserNumber28": {
          "type": "number",
          "format": "double"
        },
        "UserNumber29": {
          "type": "number",
          "format": "double"
        },
        "UserNumber30": {
          "type": "number",
          "format": "double"
        },
        "UserCheck1": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck2": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck3": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck4": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck5": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck6": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck7": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck8": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck9": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck10": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck11": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck12": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck13": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck14": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck15": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck16": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck17": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck18": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck19": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck20": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck21": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck22": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck23": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck24": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck25": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck26": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck27": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck28": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck29": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck30": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserDate1": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate2": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate3": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate4": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate5": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate6": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate7": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate8": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate9": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate10": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate11": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate12": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate13": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate14": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate15": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate16": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate17": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate18": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate19": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate20": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate21": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate22": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate23": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate24": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate25": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate26": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate27": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate28": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate29": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate30": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserList1": {
          "type": "integer",
          "format": "int32"
        },
        "UserList2": {
          "type": "integer",
          "format": "int32"
        },
        "UserList3": {
          "type": "integer",
          "format": "int32"
        },
        "UserList4": {
          "type": "integer",
          "format": "int32"
        },
        "UserList5": {
          "type": "integer",
          "format": "int32"
        },
        "UserList6": {
          "type": "integer",
          "format": "int32"
        },
        "UserList7": {
          "type": "integer",
          "format": "int32"
        },
        "UserList8": {
          "type": "integer",
          "format": "int32"
        },
        "UserList9": {
          "type": "integer",
          "format": "int32"
        },
        "UserList10": {
          "type": "integer",
          "format": "int32"
        },
        "UserList11": {
          "type": "integer",
          "format": "int32"
        },
        "UserList12": {
          "type": "integer",
          "format": "int32"
        },
        "UserList13": {
          "type": "integer",
          "format": "int32"
        },
        "UserList14": {
          "type": "integer",
          "format": "int32"
        },
        "UserList15": {
          "type": "integer",
          "format": "int32"
        },
        "UserList16": {
          "type": "integer",
          "format": "int32"
        },
        "UserList17": {
          "type": "integer",
          "format": "int32"
        },
        "UserList18": {
          "type": "integer",
          "format": "int32"
        },
        "UserList19": {
          "type": "integer",
          "format": "int32"
        },
        "UserList20": {
          "type": "integer",
          "format": "int32"
        },
        "UserList21": {
          "type": "integer",
          "format": "int32"
        },
        "UserList22": {
          "type": "integer",
          "format": "int32"
        },
        "UserList23": {
          "type": "integer",
          "format": "int32"
        },
        "UserList24": {
          "type": "integer",
          "format": "int32"
        },
        "UserList25": {
          "type": "integer",
          "format": "int32"
        },
        "UserList26": {
          "type": "integer",
          "format": "int32"
        },
        "UserList27": {
          "type": "integer",
          "format": "int32"
        },
        "UserList28": {
          "type": "integer",
          "format": "int32"
        },
        "UserList29": {
          "type": "integer",
          "format": "int32"
        },
        "UserList30": {
          "type": "integer",
          "format": "int32"
        }
      },
      "description": "DefectRecord is a selection of fields that may be modified directly."
    },
    "conquest_apiAssetRecord": {
      "type": "object",
      "properties": {
        "TypeID": {
          "type": "integer",
          "format": "int32",
          "description": "To change the Asset Type for a valuation type, use the ChangeAssetTypeCommand."
        },
        "BusinessID": {
          "type": "string"
        },
        "DepartmentID": {
          "type": "integer",
          "format": "int32"
        },
        "AssetDescription": {
          "type": "string"
        },
        "ActualAge": {
          "type": "boolean",
          "format": "boolean"
        },
        "FunctionID": {
          "type": "integer",
          "format": "int32",
          "title": "EXPERIMENTAL: Changing the FunctionID is a Key Parameter for a Valuation type.\nKey Parameter changes may require the Expiry Date to be updated"
        },
        "AssetNotes": {
          "type": "string"
        },
        "Location": {
          "type": "string"
        },
        "YearCreated": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "Renew": {
          "type": "boolean",
          "format": "boolean"
        },
        "AccountNo": {
          "type": "string"
        },
        "Expiry": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "Measurement": {
          "type": "number",
          "format": "double"
        },
        "OwnedBy": {
          "type": "integer",
          "format": "int32"
        },
        "RenewBy": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "LogAction": {
          "type": "integer",
          "format": "int32"
        },
        "DateAcquired": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "LocationID": {
          "type": "integer",
          "format": "int32"
        },
        "Warrantor": {
          "type": "string"
        },
        "WarrantyExpiry": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "LogBookID": {
          "type": "integer",
          "format": "int32"
        },
        "BarCode": {
          "type": "string"
        },
        "PriorityPoint": {
          "type": "number",
          "format": "double"
        },
        "DCID": {
          "type": "integer",
          "format": "int32",
          "title": "DCID is the Deterioration Curve ID"
        },
        "Address1": {
          "type": "string"
        },
        "Address2": {
          "type": "string"
        },
        "Suburb": {
          "type": "string"
        },
        "State": {
          "type": "string"
        },
        "Postcode": {
          "type": "string"
        },
        "Condition": {
          "type": "integer",
          "format": "int32"
        },
        "ConditionPoint": {
          "type": "number",
          "format": "double"
        },
        "ManCalcCnd": {
          "type": "boolean",
          "format": "boolean"
        },
        "SysUserText1": {
          "type": "string"
        },
        "SysUserText2": {
          "type": "string"
        },
        "SysUserText3": {
          "type": "string"
        },
        "SysUserText4": {
          "type": "string"
        },
        "SysUserText5": {
          "type": "string"
        },
        "SysUserText6": {
          "type": "string"
        },
        "SysUserText7": {
          "type": "string"
        },
        "SysUserText8": {
          "type": "string"
        },
        "SysUserNumber1": {
          "type": "number",
          "format": "double"
        },
        "SysUserNumber2": {
          "type": "number",
          "format": "double"
        },
        "SysUserDate1": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "SysUserDate2": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "SysUserCheck1": {
          "type": "boolean",
          "format": "boolean"
        },
        "SysUserCheck2": {
          "type": "boolean",
          "format": "boolean"
        },
        "SysUserList1": {
          "type": "integer",
          "format": "int32"
        },
        "SysUserList2": {
          "type": "integer",
          "format": "int32"
        },
        "SysUserList3": {
          "type": "integer",
          "format": "int32"
        },
        "SysUserList4": {
          "type": "integer",
          "format": "int32"
        },
        "SysUserHierarchy1": {
          "type": "integer",
          "format": "int32"
        },
        "SysUserHierarchy2": {
          "type": "integer",
          "format": "int32"
        },
        "Param1": {
          "type": "integer",
          "format": "int32"
        },
        "Param2": {
          "type": "integer",
          "format": "int32"
        },
        "Param3": {
          "type": "integer",
          "format": "int32"
        },
        "Param4": {
          "type": "integer",
          "format": "int32"
        },
        "Param5": {
          "type": "integer",
          "format": "int32"
        },
        "Param6": {
          "type": "integer",
          "format": "int32"
        },
        "Param7": {
          "type": "integer",
          "format": "int32"
        },
        "Param8": {
          "type": "integer",
          "format": "int32"
        },
        "Attribute1": {
          "type": "integer",
          "format": "int32"
        },
        "Attribute2": {
          "type": "integer",
          "format": "int32"
        },
        "Attribute3": {
          "type": "integer",
          "format": "int32"
        },
        "Attribute4": {
          "type": "integer",
          "format": "int32"
        },
        "Attribute5": {
          "type": "integer",
          "format": "int32"
        },
        "Attribute6": {
          "type": "integer",
          "format": "int32"
        },
        "Attribute7": {
          "type": "integer",
          "format": "int32"
        },
        "Attribute8": {
          "type": "integer",
          "format": "int32"
        },
        "Attribute9": {
          "type": "integer",
          "format": "int32"
        },
        "Attribute10": {
          "type": "integer",
          "format": "int32"
        },
        "Dimension1": {
          "type": "number",
          "format": "double"
        },
        "Dimension2": {
          "type": "number",
          "format": "double"
        },
        "Dimension3": {
          "type": "number",
          "format": "double"
        },
        "Dimension4": {
          "type": "number",
          "format": "double"
        },
        "Dimension5": {
          "type": "number",
          "format": "double"
        },
        "Dimension6": {
          "type": "number",
          "format": "double"
        },
        "Dimension7": {
          "type": "number",
          "format": "double"
        },
        "Dimension8": {
          "type": "number",
          "format": "double"
        },
        "Environment1": {
          "type": "integer",
          "format": "int32"
        },
        "Environment2": {
          "type": "integer",
          "format": "int32"
        },
        "Environment3": {
          "type": "integer",
          "format": "int32"
        },
        "Environment4": {
          "type": "integer",
          "format": "int32"
        },
        "Environment5": {
          "type": "integer",
          "format": "int32"
        },
        "Environment6": {
          "type": "integer",
          "format": "int32"
        },
        "Environment7": {
          "type": "integer",
          "format": "int32"
        },
        "Environment8": {
          "type": "integer",
          "format": "int32"
        },
        "UserText1": {
          "type": "string"
        },
        "UserText2": {
          "type": "string"
        },
        "UserText3": {
          "type": "string"
        },
        "UserText4": {
          "type": "string"
        },
        "UserText5": {
          "type": "string"
        },
        "UserText6": {
          "type": "string"
        },
        "UserText7": {
          "type": "string"
        },
        "UserText8": {
          "type": "string"
        },
        "UserText9": {
          "type": "string"
        },
        "UserText10": {
          "type": "string"
        },
        "UserText11": {
          "type": "string"
        },
        "UserText12": {
          "type": "string"
        },
        "UserText13": {
          "type": "string"
        },
        "UserText14": {
          "type": "string"
        },
        "UserText15": {
          "type": "string"
        },
        "UserText16": {
          "type": "string"
        },
        "UserText17": {
          "type": "string"
        },
        "UserText18": {
          "type": "string"
        },
        "UserText19": {
          "type": "string"
        },
        "UserText20": {
          "type": "string"
        },
        "UserText21": {
          "type": "string"
        },
        "UserText22": {
          "type": "string"
        },
        "UserText23": {
          "type": "string"
        },
        "UserText24": {
          "type": "string"
        },
        "UserText25": {
          "type": "string"
        },
        "UserText26": {
          "type": "string"
        },
        "UserText27": {
          "type": "string"
        },
        "UserText28": {
          "type": "string"
        },
        "UserText29": {
          "type": "string"
        },
        "UserText30": {
          "type": "string"
        },
        "UserNumber1": {
          "type": "number",
          "format": "double"
        },
        "UserNumber2": {
          "type": "number",
          "format": "double"
        },
        "UserNumber3": {
          "type": "number",
          "format": "double"
        },
        "UserNumber4": {
          "type": "number",
          "format": "double"
        },
        "UserNumber5": {
          "type": "number",
          "format": "double"
        },
        "UserNumber6": {
          "type": "number",
          "format": "double"
        },
        "UserNumber7": {
          "type": "number",
          "format": "double"
        },
        "UserNumber8": {
          "type": "number",
          "format": "double"
        },
        "UserNumber9": {
          "type": "number",
          "format": "double"
        },
        "UserNumber10": {
          "type": "number",
          "format": "double"
        },
        "UserNumber11": {
          "type": "number",
          "format": "double"
        },
        "UserNumber12": {
          "type": "number",
          "format": "double"
        },
        "UserNumber13": {
          "type": "number",
          "format": "double"
        },
        "UserNumber14": {
          "type": "number",
          "format": "double"
        },
        "UserNumber15": {
          "type": "number",
          "format": "double"
        },
        "UserNumber16": {
          "type": "number",
          "format": "double"
        },
        "UserNumber17": {
          "type": "number",
          "format": "double"
        },
        "UserNumber18": {
          "type": "number",
          "format": "double"
        },
        "UserNumber19": {
          "type": "number",
          "format": "double"
        },
        "UserNumber20": {
          "type": "number",
          "format": "double"
        },
        "UserNumber21": {
          "type": "number",
          "format": "double"
        },
        "UserNumber22": {
          "type": "number",
          "format": "double"
        },
        "UserNumber23": {
          "type": "number",
          "format": "double"
        },
        "UserNumber24": {
          "type": "number",
          "format": "double"
        },
        "UserNumber25": {
          "type": "number",
          "format": "double"
        },
        "UserNumber26": {
          "type": "number",
          "format": "double"
        },
        "UserNumber27": {
          "type": "number",
          "format": "double"
        },
        "UserNumber28": {
          "type": "number",
          "format": "double"
        },
        "UserNumber29": {
          "type": "number",
          "format": "double"
        },
        "UserNumber30": {
          "type": "number",
          "format": "double"
        },
        "UserCheck1": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck2": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck3": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck4": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck5": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck6": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck7": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck8": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck9": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck10": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck11": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck12": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck13": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck14": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck15": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck16": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck17": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck18": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck19": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck20": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck21": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck22": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck23": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck24": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck25": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck26": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck27": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck28": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck29": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck30": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserDate1": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate2": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate3": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate4": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate5": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate6": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate7": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate8": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate9": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate10": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate11": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate12": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate13": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate14": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate15": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate16": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate17": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate18": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate19": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate20": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate21": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate22": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate23": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate24": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate25": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate26": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate27": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate28": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate29": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate30": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserList1": {
          "type": "integer",
          "format": "int32"
        },
        "UserList2": {
          "type": "integer",
          "format": "int32"
        },
        "UserList3": {
          "type": "integer",
          "format": "int32"
        },
        "UserList4": {
          "type": "integer",
          "format": "int32"
        },
        "UserList5": {
          "type": "integer",
          "format": "int32"
        },
        "UserList6": {
          "type": "integer",
          "format": "int32"
        },
        "UserList7": {
          "type": "integer",
          "format": "int32"
        },
        "UserList8": {
          "type": "integer",
          "format": "int32"
        },
        "UserList9": {
          "type": "integer",
          "format": "int32"
        },
        "UserList10": {
          "type": "integer",
          "format": "int32"
        },
        "UserList11": {
          "type": "integer",
          "format": "int32"
        },
        "UserList12": {
          "type": "integer",
          "format": "int32"
        },
        "UserList13": {
          "type": "integer",
          "format": "int32"
        },
        "UserList14": {
          "type": "integer",
          "format": "int32"
        },
        "UserList15": {
          "type": "integer",
          "format": "int32"
        },
        "UserList16": {
          "type": "integer",
          "format": "int32"
        },
        "UserList17": {
          "type": "integer",
          "format": "int32"
        },
        "UserList18": {
          "type": "integer",
          "format": "int32"
        },
        "UserList19": {
          "type": "integer",
          "format": "int32"
        },
        "UserList20": {
          "type": "integer",
          "format": "int32"
        },
        "UserList21": {
          "type": "integer",
          "format": "int32"
        },
        "UserList22": {
          "type": "integer",
          "format": "int32"
        },
        "UserList23": {
          "type": "integer",
          "format": "int32"
        },
        "UserList24": {
          "type": "integer",
          "format": "int32"
        },
        "UserList25": {
          "type": "integer",
          "format": "int32"
        },
        "UserList26": {
          "type": "integer",
          "format": "int32"
        },
        "UserList27": {
          "type": "integer",
          "format": "int32"
        },
        "UserList28": {
          "type": "integer",
          "format": "int32"
        },
        "UserList29": {
          "type": "integer",
          "format": "int32"
        },
        "UserList30": {
          "type": "integer",
          "format": "int32"
        },
        "LocationCoordinates": {
          "$ref": "#/definitions/conquest_apiGeographyCoordinatesValue",
          "title": "LocationCoordinates is a pin/point that defaults to the centroid on the Asset's geography object"
        }
      },
      "title": "AssetRecord is a selection of fields that may be modified directly.\nTODO: Risk, Valuation fields are omitted, they will be introduced later"
    },
    "conquest_apiAssetRecordChangeSet": {
      "type": "object",
      "properties": {
        "AssetID": {
          "type": "integer",
          "format": "int32"
        },
        "LastEdit": {
          "type": "string",
          "format": "date-time"
        },
        "Changes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Original": {
          "$ref": "#/definitions/conquest_apiAssetRecord"
        },
        "Updated": {
          "$ref": "#/definitions/conquest_apiAssetRecord"
        }
      }
    },
    "conquest_apiAttributeSet": {
      "type": "object",
      "properties": {
        "AttributeID": {
          "type": "integer",
          "format": "int32"
        },
        "AttributeDescription": {
          "type": "string"
        },
        "AttributeNotes": {
          "type": "string"
        },
        "AttributeType": {
          "$ref": "#/definitions/conquest_apiObjectType",
          "title": "ObjectType is one of the following: AssetType, ActionCategory, StandardAction, StandardDefect, StandardInspection"
        },
        "ConditionType": {
          "$ref": "#/definitions/conquest_apiConditionType"
        },
        "Fields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/conquest_apiAttributeSetField"
          }
        }
      }
    },
    "conquest_apiAttributeSetField": {
      "type": "object",
      "properties": {
        "FieldName": {
          "type": "string",
          "title": "FieldName is the Field that appears on the ObjectType, for example, Asset.UserText1"
        },
        "Caption": {
          "type": "string"
        },
        "Order": {
          "type": "integer",
          "format": "int32"
        },
        "Required": {
          "type": "boolean",
          "format": "boolean"
        },
        "Notes": {
          "type": "string"
        },
        "SimpleValue": {
          "properties": {}
        },
        "ListValue": {
          "$ref": "#/definitions/conquest_apiAttributeSet_ListValue"
        },
        "WeightedValue": {
          "$ref": "#/definitions/conquest_apiAttributeSet_WeightedValue"
        },
        "DimensionValue": {
          "$ref": "#/definitions/conquest_apiAttributeSet_DimensionValue"
        },
        "HierarchyValue": {
          "$ref": "#/definitions/conquest_apiAttributeSet_HierarchyValue"
        }
      }
    },
    "conquest_apiAttributeSetFieldNames": {
      "type": "object",
      "properties": {
        "ObjectType": {
          "$ref": "#/definitions/conquest_apiObjectType"
        },
        "FieldNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "conquest_apiAttributeSet_DimensionValue": {
      "type": "object",
      "properties": {
        "CodeID": {
          "type": "integer",
          "format": "int32",
          "title": "CodeID refers to a CodeFieldItem in the Unit of Measurement list"
        },
        "CodeDescription": {
          "type": "string"
        }
      }
    },
    "conquest_apiAttributeSet_HierarchyValue": {
      "type": "object",
      "properties": {
        "CodeListID": {
          "type": "integer",
          "format": "int32"
        },
        "CodeListDescription": {
          "type": "string"
        }
      }
    },
    "conquest_apiAttributeSet_ListValue": {
      "type": "object",
      "properties": {
        "CodeListID": {
          "type": "integer",
          "format": "int32"
        },
        "CodeListDescription": {
          "type": "string"
        }
      }
    },
    "conquest_apiAttributeSet_WeightedValue": {
      "type": "object",
      "properties": {
        "CodeListID": {
          "type": "integer",
          "format": "int32"
        },
        "Weight": {
          "type": "number",
          "format": "double"
        },
        "CodeListDescription": {
          "type": "string"
        }
      }
    },
    "conquest_apiAttributeSetsResult": {
      "type": "object",
      "properties": {
        "AttributeSets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/conquest_apiAttributeSet"
          }
        }
      }
    },
    "conquest_apiAuthTokenResponse": {
      "type": "object",
      "properties": {
        "access_token": {
          "type": "string"
        },
        "token_type": {
          "type": "string",
          "title": "always 'bearer'"
        },
        "refresh_token": {
          "type": "string",
          "description": "refresh_token for when the 'offline' scope is requested."
        },
        "expires_in": {
          "type": "integer",
          "format": "int32",
          "description": "expires_in seconds. For example 3600 is 1 hour."
        },
        "id_token": {
          "type": "string"
        }
      }
    },
    "conquest_apiCalculateDefectResponseDateParameters": {
      "type": "object",
      "properties": {
        "DefectID": {
          "type": "integer",
          "format": "int32",
          "title": "The Defect for which Severities and their the Response Times are configured (on it's Standard Defect)"
        },
        "SeverityID": {
          "type": "integer",
          "format": "int32",
          "title": "The Severity chosen for the defect"
        }
      },
      "description": "Parameters to calculate a Defect's Response Date calculated from the Current Inspection Date, Asset's Priority and Severity."
    },
    "conquest_apiCalculateDefectResponseDateRequest": {
      "type": "object",
      "properties": {
        "Parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/conquest_apiCalculateDefectResponseDateParameters"
          }
        }
      }
    },
    "conquest_apiCalculateDefectResponseDateResponse": {
      "type": "object",
      "properties": {
        "Results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/conquest_apiCalculateDefectResponseDateResult"
          }
        }
      }
    },
    "conquest_apiCalculateDefectResponseDateResult": {
      "type": "object",
      "properties": {
        "Parameters": {
          "$ref": "#/definitions/conquest_apiCalculateDefectResponseDateParameters"
        },
        "ResponseDate": {
          "$ref": "#/definitions/conquest_apiTimestampValue",
          "description": "The Response Date calculated from the Current Inspection Date, Asset's Priority and Severity."
        }
      }
    },
    "conquest_apiCalendarDurationUnit": {
      "type": "string",
      "enum": [
        "CalendarDurationUnit_Unknown",
        "CalendarDurationUnit_Year",
        "CalendarDurationUnit_Quarter",
        "CalendarDurationUnit_Month",
        "CalendarDurationUnit_DayOfYear",
        "CalendarDurationUnit_Day",
        "CalendarDurationUnit_WeekOfYear",
        "CalendarDurationUnit_Weekday",
        "CalendarDurationUnit_Hour",
        "CalendarDurationUnit_Minute",
        "CalendarDurationUnit_Second",
        "CalendarDurationUnit_WorkingCalendarDay"
      ],
      "default": "CalendarDurationUnit_Unknown"
    },
    "conquest_apiChangeAssetTypeCommand": {
      "type": "object",
      "properties": {
        "AssetID": {
          "type": "integer",
          "format": "int32"
        },
        "TypeID": {
          "type": "integer",
          "format": "int32"
        },
        "OriginalTypeID": {
          "type": "integer",
          "format": "int32"
        },
        "TransactionDate": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "ExpiryDate": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        }
      }
    },
    "conquest_apiChangeDiaryContentCommand": {
      "type": "object",
      "properties": {
        "ObjectKey": {
          "$ref": "#/definitions/conquest_apiObjectKey"
        },
        "DocumentID": {
          "type": "integer",
          "format": "int32"
        },
        "Content": {
          "type": "string"
        }
      }
    },
    "conquest_apiChangeDocumentContentCommand": {
      "type": "object",
      "properties": {
        "ObjectKey": {
          "$ref": "#/definitions/conquest_apiObjectKey"
        },
        "DocumentID": {
          "type": "integer",
          "format": "int32"
        },
        "LinkExistingDocument": {
          "type": "boolean",
          "format": "boolean"
        },
        "Address": {
          "type": "string",
          "title": "See AddDocumentCommand.Address"
        },
        "ContentType": {
          "type": "string"
        },
        "UpdateTime": {
          "type": "string",
          "format": "date-time",
          "description": "UpdateTime when provided by the device can be used as a key, because a DocumentID is not yet present."
        },
        "Hashes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of calculated hashes / checksum of the file to be uploaded."
        },
        "ContentLength": {
          "type": "string",
          "format": "int64",
          "title": "ContentLength in bytes"
        }
      }
    },
    "conquest_apiChangeSetResult": {
      "type": "object",
      "properties": {
        "ObjectKey": {
          "$ref": "#/definitions/conquest_apiObjectKey"
        },
        "Accepted": {
          "type": "boolean",
          "format": "boolean"
        },
        "LastEdit": {
          "type": "string",
          "format": "date-time"
        },
        "Editor": {
          "type": "string"
        }
      }
    },
    "conquest_apiCodeList": {
      "type": "object",
      "properties": {
        "CodeListID": {
          "type": "integer",
          "format": "int32",
          "title": "CodeListID aka. CodeFieldID"
        },
        "Description": {
          "type": "string"
        },
        "Type": {
          "$ref": "#/definitions/conquest_apiCodeListType"
        },
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/conquest_apiCodeListItem"
          }
        },
        "CodeListName": {
          "type": "string",
          "title": "CodeListName is set for System lists (aka. CodeField)"
        }
      },
      "title": "tblCodeField"
    },
    "conquest_apiCodeListItem": {
      "type": "object",
      "properties": {
        "CodeID": {
          "type": "integer",
          "format": "int32"
        },
        "CodeListID": {
          "type": "integer",
          "format": "int32",
          "title": "CodeListID aka. CodeFieldID"
        },
        "Description": {
          "type": "string"
        },
        "Ordr": {
          "type": "integer",
          "format": "int32"
        },
        "Weight": {
          "type": "number",
          "format": "double"
        }
      },
      "title": "tblCode"
    },
    "conquest_apiCodeListType": {
      "type": "string",
      "enum": [
        "CodeListType_System",
        "CodeListType_User",
        "CodeListType_Condition",
        "CodeListType_Element",
        "CodeListType_Defect",
        "CodeListType_Hierarchy",
        "CodeListType_Consequence",
        "CodeListType_Unknown"
      ],
      "default": "CodeListType_System"
    },
    "conquest_apiCompareOperator": {
      "type": "string",
      "enum": [
        "CompareOperator_None",
        "CompareOperator_RangeInclusive",
        "CompareOperator_GreaterThan",
        "CompareOperator_GreaterThanOrEqualTo",
        "CompareOperator_LessThan",
        "CompareOperator_LessThanOrEqualTo",
        "CompareOperator_Contains",
        "CompareOperator_EqualTo",
        "CompareOperator_NotSet",
        "CompareOperator_StringStartsWith",
        "CompareOperator_StringEndsWith",
        "CompareOperator_StringContains",
        "CompareOperator_DescendentOf",
        "CompareOperator_AncestorOf"
      ],
      "default": "CompareOperator_None",
      "title": "- CompareOperator_RangeInclusive: RangeComparisonType\n - CompareOperator_Contains: SetComparisonType\n - CompareOperator_EqualTo: ValueComparisonType\n - CompareOperator_StringStartsWith: String comparisons\n - CompareOperator_DescendentOf: HierarchyComparisonType"
    },
    "conquest_apiCompleteActionCommand": {
      "type": "object",
      "properties": {
        "CompletionOptions": {
          "$ref": "#/definitions/conquest_apiActionCompletionOptions"
        },
        "SubActionCompletionOptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/conquest_apiActionCompletionOptions"
          }
        }
      }
    },
    "conquest_apiCompleteActionResult": {
      "type": "object",
      "properties": {
        "job_key": {
          "$ref": "#/definitions/conquest_apiJobKey"
        }
      }
    },
    "conquest_apiConditionType": {
      "type": "string",
      "enum": [
        "ConditionType_WeightedAverage",
        "ConditionType_ConditionDistribution"
      ],
      "default": "ConditionType_WeightedAverage",
      "title": "- ConditionType_WeightedAverage: Weighted Average (Default)\n - ConditionType_ConditionDistribution: Condition Distribution (%)"
    },
    "conquest_apiContextDescriptor": {
      "type": "object",
      "properties": {
        "Context": {
          "type": "string",
          "title": "Context name"
        },
        "ResultObjectType": {
          "$ref": "#/definitions/conquest_apiObjectType",
          "title": "ResultObjectType is the ObjectType of the returned result"
        },
        "ParameterObjectType": {
          "$ref": "#/definitions/conquest_apiObjectType",
          "title": "ParameterObjectType is the ObjectType of the parameter that the result is related to"
        },
        "System": {
          "type": "boolean",
          "format": "boolean",
          "title": "This context is pre-defined by the system"
        },
        "PredefinedContextCriteria": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/conquest_apiPredefinedContextCriteria"
          },
          "description": "A Context can have some pre-defined criteria that the user can enable or disable when parameterising a Find query.\n\nFor example, the related actions Find query can be parameterised with the pre-defined criteria 'Completed' and 'Not Completed'"
        }
      }
    },
    "conquest_apiCostType": {
      "type": "string",
      "enum": [
        "CostType_Other",
        "CostType_Actual",
        "CostType_Estimated"
      ],
      "default": "CostType_Other"
    },
    "conquest_apiCreateActionForAssetCommand": {
      "type": "object",
      "properties": {
        "AssetID": {
          "type": "integer",
          "format": "int32",
          "title": "ParentID is 0 if this is a Facility"
        },
        "ActionDescription": {
          "type": "string"
        },
        "StdActionID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "conquest_apiCreateActionForDefectCommand": {
      "type": "object",
      "properties": {
        "DefectID": {
          "type": "integer",
          "format": "int32"
        },
        "StdActionID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "conquest_apiCreateAssetCommand": {
      "type": "object",
      "properties": {
        "ParentID": {
          "type": "integer",
          "format": "int32",
          "title": "ParentID is 0 if this is a Facility"
        },
        "AssetDescription": {
          "type": "string"
        },
        "TypeID": {
          "type": "integer",
          "format": "int32"
        },
        "Proposed": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "conquest_apiCreateDefectForAssetCommand": {
      "type": "object",
      "properties": {
        "AssetID": {
          "type": "integer",
          "format": "int32"
        },
        "StdDefectID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "conquest_apiCreateRequestCommand": {
      "type": "object",
      "properties": {
        "ChangeSet": {
          "$ref": "#/definitions/conquest_apiRequestRecordChangeSet"
        }
      }
    },
    "conquest_apiCreateSessionGrantType": {
      "type": "string",
      "enum": [
        "unknown",
        "authorization_code",
        "refresh_token",
        "password",
        "pass_code"
      ],
      "default": "unknown",
      "description": " - authorization_code: code is used for exchanging an authorization code for an access token\nwhen an application is configured for the 'authorization code flow'\n - refresh_token: a refresh_token is obtained when a session has been created.\nIt is used for obtaining a new access token when a session has expired.\n\nA refresh token may be provided when a session is created with the 'offline' scope.\n - password: DO NOT USE THIS. This flow has changed. Instead of calling the API, obtain an authorization code from services.\n\npassword is a **custom** flow where a USER provides their own credentials directly\nto the client application the application itself generates an access token.\n\nFor when an application is configured for the 'resource owner flow'.\n - pass_code: pass_code is a **custom** flow for conquest III\nso that users can open the workplanner\n\nthis flow must be used with the \"/redirect/\" endpoint"
    },
    "conquest_apiCreateSessionResponse": {
      "type": "object",
      "properties": {
        "TokenResponse": {
          "$ref": "#/definitions/conquest_apiAuthTokenResponse"
        },
        "Error": {
          "$ref": "#/definitions/conquest_apiErrorResponse"
        }
      }
    },
    "conquest_apiCreateSucceedingActionCommand": {
      "type": "object",
      "properties": {
        "ActionID": {
          "type": "integer",
          "format": "int32",
          "title": "ActionID is the PrecedingAction"
        },
        "ActionDescription": {
          "type": "string"
        },
        "StdActionID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "conquest_apiCriteria": {
      "type": "object",
      "properties": {
        "And": {
          "type": "boolean",
          "format": "boolean",
          "title": "If And is true, all Items must be true for the Criteria to evaluate to true\nIf And is false, all Items must be false for the Criteria to evaluate to false"
        },
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/conquest_apiCriteriaItem"
          },
          "title": "A list of expressions which evaluate to true or false"
        }
      },
      "description": "Criteria is a list of expressions in a 'where' clause that evaluate to true or false."
    },
    "conquest_apiCriteriaItem": {
      "type": "object",
      "properties": {
        "FieldList": {
          "$ref": "#/definitions/conquest_apiFieldCriterionList"
        },
        "Group": {
          "$ref": "#/definitions/conquest_apiCriteria"
        }
      },
      "title": "Criteria is an expression in a 'where' clause that evaluates to true or false"
    },
    "conquest_apiCyclicActionCompletionProcess": {
      "type": "object",
      "properties": {
        "NextCycleDueDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "conquest_apiDatabaseConnectionNamesResponse": {
      "type": "object",
      "properties": {
        "connectionNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "preferredConnectionName": {
          "type": "string"
        }
      }
    },
    "conquest_apiDecimal": {
      "type": "object",
      "properties": {
        "numerator": {
          "type": "string",
          "format": "int64",
          "description": "In C#, this is equivalent to the 'lo', 'mid', 'hi' parts of the Decimal type",
          "title": "numerator is a positive 64bit integer"
        },
        "signPow": {
          "type": "integer",
          "format": "int32",
          "description": "signPow is the sign and a power of 10.\n\nIf signPow is zero, the decimal is zero\nIf signPow is -ve, the decimal is -ve\n\nIn C#, this is the equivalent to 'isNegative * scale' for the Decimal type"
        }
      },
      "description": "Examples:\n- For the value '0'\n       numerator = 0\n       signPow = 0\n- For the value '1'\n       numerator = 1\n       signPow = 1\n- For the value '-1'\n       numerator = 1\n       signPow = -1\n- For the value '10'\n       numerator = 10\n       signPow = 1\n- For the value '0.1'\n       numerator = 1\n       signPow = 2\n- For the value '-10.50'\n       numerator = abs(10.50) * pow(10, 2+1)   // 2+1 is 'scale + 1'\n       signPow = -(2+1)                        // 2+1 is 'scale + 1'\n\nIn C#, this is converted to Decimal",
      "title": "Decimal maintains precision by dividing the numerator by the signPow"
    },
    "conquest_apiDecimalValue": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/conquest_apiDecimal"
        }
      }
    },
    "conquest_apiDefectEntity": {
      "type": "object",
      "properties": {
        "DefectID": {
          "type": "integer",
          "format": "int32"
        },
        "Record": {
          "$ref": "#/definitions/conquest_apiDefectRecord"
        },
        "AssetID": {
          "type": "integer",
          "format": "int32"
        },
        "ActionID": {
          "type": "integer",
          "format": "int32"
        },
        "Permission": {
          "$ref": "#/definitions/conquest_apiPermission"
        },
        "AttributeID": {
          "type": "integer",
          "format": "int32",
          "title": "AttributeID for the AttributeSet configured on the AssetType"
        },
        "Editor": {
          "type": "string"
        },
        "EditDate": {
          "type": "string",
          "format": "date-time"
        },
        "InspectionID": {
          "type": "integer",
          "format": "int32"
        },
        "InspectionNotes": {
          "type": "string"
        },
        "CompletionDate": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "SysUserHierarchy1": {
          "type": "integer",
          "format": "int32",
          "title": "The Asset Priority (aka. Asset.SysUserHierarchy1)"
        },
        "SeverityScore": {
          "type": "integer",
          "format": "int32",
          "title": "The Severity Score of the Standard Defect Response of the selected Severity"
        },
        "ResponseDate": {
          "$ref": "#/definitions/conquest_apiTimestampValue",
          "title": "ResponseDate for the Selected Severity"
        },
        "lock": {
          "$ref": "#/definitions/conquest_apiLock"
        }
      },
      "title": "DefectEntity is comprised of the Defect's Record and auxiliary fields (calculated, related)"
    },
    "conquest_apiDefectRecord": {
      "type": "object",
      "properties": {
        "StdDefectID": {
          "type": "integer",
          "format": "int32"
        },
        "CategoryID": {
          "type": "integer",
          "format": "int32"
        },
        "DefectDescription": {
          "type": "string"
        },
        "Monitor": {
          "type": "boolean",
          "format": "boolean"
        },
        "WorkRequired": {
          "type": "boolean",
          "format": "boolean"
        },
        "Condition": {
          "type": "integer",
          "format": "int32"
        },
        "Priority": {
          "type": "integer",
          "format": "int32"
        },
        "CostEstimate": {
          "$ref": "#/definitions/conquest_apiDecimalValue",
          "description": "google.protobuf.Int32Value ElementList = 44; // Legacy no-one uses it Peter says.\n   google.protobuf.Int32Value Element = 45; // Legacy no-one uses it Peter says."
        },
        "MaterialQuantity": {
          "type": "number",
          "format": "double"
        },
        "SeverityID": {
          "type": "integer",
          "format": "int32",
          "title": "SeverityID as determined by the Asset's Priority"
        },
        "DefectNotes": {
          "type": "string"
        },
        "UserText1": {
          "type": "string"
        },
        "UserText2": {
          "type": "string"
        },
        "UserText3": {
          "type": "string"
        },
        "UserText4": {
          "type": "string"
        },
        "UserText5": {
          "type": "string"
        },
        "UserText6": {
          "type": "string"
        },
        "UserText7": {
          "type": "string"
        },
        "UserText8": {
          "type": "string"
        },
        "UserText9": {
          "type": "string"
        },
        "UserText10": {
          "type": "string"
        },
        "UserText11": {
          "type": "string"
        },
        "UserText12": {
          "type": "string"
        },
        "UserText13": {
          "type": "string"
        },
        "UserText14": {
          "type": "string"
        },
        "UserText15": {
          "type": "string"
        },
        "UserText16": {
          "type": "string"
        },
        "UserText17": {
          "type": "string"
        },
        "UserText18": {
          "type": "string"
        },
        "UserText19": {
          "type": "string"
        },
        "UserText20": {
          "type": "string"
        },
        "UserText21": {
          "type": "string"
        },
        "UserText22": {
          "type": "string"
        },
        "UserText23": {
          "type": "string"
        },
        "UserText24": {
          "type": "string"
        },
        "UserText25": {
          "type": "string"
        },
        "UserText26": {
          "type": "string"
        },
        "UserText27": {
          "type": "string"
        },
        "UserText28": {
          "type": "string"
        },
        "UserText29": {
          "type": "string"
        },
        "UserText30": {
          "type": "string"
        },
        "UserNumber1": {
          "type": "number",
          "format": "double"
        },
        "UserNumber2": {
          "type": "number",
          "format": "double"
        },
        "UserNumber3": {
          "type": "number",
          "format": "double"
        },
        "UserNumber4": {
          "type": "number",
          "format": "double"
        },
        "UserNumber5": {
          "type": "number",
          "format": "double"
        },
        "UserNumber6": {
          "type": "number",
          "format": "double"
        },
        "UserNumber7": {
          "type": "number",
          "format": "double"
        },
        "UserNumber8": {
          "type": "number",
          "format": "double"
        },
        "UserNumber9": {
          "type": "number",
          "format": "double"
        },
        "UserNumber10": {
          "type": "number",
          "format": "double"
        },
        "UserNumber11": {
          "type": "number",
          "format": "double"
        },
        "UserNumber12": {
          "type": "number",
          "format": "double"
        },
        "UserNumber13": {
          "type": "number",
          "format": "double"
        },
        "UserNumber14": {
          "type": "number",
          "format": "double"
        },
        "UserNumber15": {
          "type": "number",
          "format": "double"
        },
        "UserNumber16": {
          "type": "number",
          "format": "double"
        },
        "UserNumber17": {
          "type": "number",
          "format": "double"
        },
        "UserNumber18": {
          "type": "number",
          "format": "double"
        },
        "UserNumber19": {
          "type": "number",
          "format": "double"
        },
        "UserNumber20": {
          "type": "number",
          "format": "double"
        },
        "UserNumber21": {
          "type": "number",
          "format": "double"
        },
        "UserNumber22": {
          "type": "number",
          "format": "double"
        },
        "UserNumber23": {
          "type": "number",
          "format": "double"
        },
        "UserNumber24": {
          "type": "number",
          "format": "double"
        },
        "UserNumber25": {
          "type": "number",
          "format": "double"
        },
        "UserNumber26": {
          "type": "number",
          "format": "double"
        },
        "UserNumber27": {
          "type": "number",
          "format": "double"
        },
        "UserNumber28": {
          "type": "number",
          "format": "double"
        },
        "UserNumber29": {
          "type": "number",
          "format": "double"
        },
        "UserNumber30": {
          "type": "number",
          "format": "double"
        },
        "UserCheck1": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck2": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck3": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck4": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck5": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck6": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck7": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck8": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck9": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck10": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck11": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck12": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck13": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck14": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck15": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck16": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck17": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck18": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck19": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck20": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck21": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck22": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck23": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck24": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck25": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck26": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck27": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck28": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck29": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserCheck30": {
          "type": "boolean",
          "format": "boolean"
        },
        "UserDate1": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate2": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate3": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate4": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate5": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate6": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate7": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate8": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate9": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate10": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate11": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate12": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate13": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate14": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate15": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate16": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate17": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate18": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate19": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate20": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate21": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate22": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate23": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate24": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate25": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate26": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate27": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate28": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate29": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate30": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserList1": {
          "type": "integer",
          "format": "int32"
        },
        "UserList2": {
          "type": "integer",
          "format": "int32"
        },
        "UserList3": {
          "type": "integer",
          "format": "int32"
        },
        "UserList4": {
          "type": "integer",
          "format": "int32"
        },
        "UserList5": {
          "type": "integer",
          "format": "int32"
        },
        "UserList6": {
          "type": "integer",
          "format": "int32"
        },
        "UserList7": {
          "type": "integer",
          "format": "int32"
        },
        "UserList8": {
          "type": "integer",
          "format": "int32"
        },
        "UserList9": {
          "type": "integer",
          "format": "int32"
        },
        "UserList10": {
          "type": "integer",
          "format": "int32"
        },
        "UserList11": {
          "type": "integer",
          "format": "int32"
        },
        "UserList12": {
          "type": "integer",
          "format": "int32"
        },
        "UserList13": {
          "type": "integer",
          "format": "int32"
        },
        "UserList14": {
          "type": "integer",
          "format": "int32"
        },
        "UserList15": {
          "type": "integer",
          "format": "int32"
        },
        "UserList16": {
          "type": "integer",
          "format": "int32"
        },
        "UserList17": {
          "type": "integer",
          "format": "int32"
        },
        "UserList18": {
          "type": "integer",
          "format": "int32"
        },
        "UserList19": {
          "type": "integer",
          "format": "int32"
        },
        "UserList20": {
          "type": "integer",
          "format": "int32"
        },
        "UserList21": {
          "type": "integer",
          "format": "int32"
        },
        "UserList22": {
          "type": "integer",
          "format": "int32"
        },
        "UserList23": {
          "type": "integer",
          "format": "int32"
        },
        "UserList24": {
          "type": "integer",
          "format": "int32"
        },
        "UserList25": {
          "type": "integer",
          "format": "int32"
        },
        "UserList26": {
          "type": "integer",
          "format": "int32"
        },
        "UserList27": {
          "type": "integer",
          "format": "int32"
        },
        "UserList28": {
          "type": "integer",
          "format": "int32"
        },
        "UserList29": {
          "type": "integer",
          "format": "int32"
        },
        "UserList30": {
          "type": "integer",
          "format": "int32"
        },
        "LocationCoordinates": {
          "$ref": "#/definitions/conquest_apiGeographyCoordinatesValue",
          "title": "LocationCoordinates is a pin/point that defaults to the centroid on the Asset's geography object"
        }
      },
      "description": "DefectRecord is a selection of fields that may be modified directly."
    },
    "conquest_apiDefectRecordChangeSet": {
      "type": "object",
      "properties": {
        "DefectID": {
          "type": "integer",
          "format": "int32"
        },
        "LastEdit": {
          "type": "string",
          "format": "date-time"
        },
        "Changes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Original": {
          "$ref": "#/definitions/conquest_apiDefectRecord"
        },
        "Updated": {
          "$ref": "#/definitions/conquest_apiDefectRecord"
        }
      }
    },
    "conquest_apiDeleteActionCommand": {
      "type": "object",
      "properties": {
        "ActionID": {
          "type": "integer",
          "format": "int32"
        },
        "DeleteRelatedRequests": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "conquest_apiDeleteAssetCommand": {
      "type": "object",
      "properties": {
        "AssetID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "conquest_apiDeleteDefectCommand": {
      "type": "object",
      "properties": {
        "DefectID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "conquest_apiDeleteRequestCommand": {
      "type": "object",
      "properties": {
        "RequestID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "conquest_apiDescribeEnumerationRequest": {
      "type": "object",
      "properties": {
        "EnumerationTypeNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "EnumerationTypeNames is a list of the \"original names\" or \"tags\" of the values in the EnumerationType"
        }
      }
    },
    "conquest_apiDescribeEnumerationResult": {
      "type": "object",
      "properties": {
        "Enumerations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/conquest_apiEnumeration"
          }
        }
      }
    },
    "conquest_apiDisposalActionCompletionProcess": {
      "type": "object",
      "properties": {
        "MeasurementAfterDisposal": {
          "$ref": "#/definitions/conquest_apiDecimalValue"
        }
      }
    },
    "conquest_apiDocument": {
      "type": "object",
      "properties": {
        "ObjectKey": {
          "$ref": "#/definitions/conquest_apiObjectKey"
        },
        "DocumentID": {
          "type": "integer",
          "format": "int32"
        },
        "Order": {
          "type": "integer",
          "format": "int32"
        },
        "DocumentDescription": {
          "type": "string"
        },
        "ContentType": {
          "type": "string"
        },
        "Content": {
          "type": "string"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreateTime": {
          "type": "string",
          "format": "date-time"
        },
        "Link": {
          "type": "string",
          "description": "Link is the location from which a document can be accessed. It is calculated from the document Address.\n\nLink is empty when a location requires accessing a document with a security token.\n\nAll uploaded documents will have an empty Link field.\n\nYou can obtain an appropriate link which encodes a security token using the GenerateDocumentLinkCommand\nOR use the \"/download/document?object_type=...\u0026object_id=...\u0026document_id=...\" endpoint which will either serve\n   the file or redirect to a link, potentially generated by the GenerateDocumentLinkCommand"
        },
        "UploadStatus": {
          "$ref": "#/definitions/conquest_apiUploadStatus"
        },
        "FileShouldBeAccessible": {
          "type": "boolean",
          "format": "boolean",
          "description": "FileShouldBeAccessible reports whether the document file SHOULD be accessible.\n\nThis depends on two things:\n- Is the file from a correctly configured document location?\n- Has the file been uploaded successfully (UploadStatus_Completed)?"
        },
        "ContentLength": {
          "type": "string",
          "format": "int64",
          "title": "ContentLength in bytes"
        }
      }
    },
    "conquest_apiDocumentContainer": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string",
          "title": "Name is display name. It is the same as the HierarchyNode.Name"
        },
        "Prefix": {
          "type": "string",
          "title": "Prefix is a Uri, that always ends with a '/'. It is the same as the HierarchyNode.ObjectKey.StringValue"
        }
      },
      "title": "DocumentContainer is convertible to a HierarchyNode which does not have a ParentKey nor a FamilyCode"
    },
    "conquest_apiDuration": {
      "type": "object",
      "properties": {
        "milliseconds": {
          "type": "string",
          "format": "int64"
        }
      },
      "title": "TODO remove and use google.protobuf.Duration"
    },
    "conquest_apiDurationValue": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/conquest_apiDuration"
        }
      }
    },
    "conquest_apiEffectivePermission": {
      "type": "object",
      "properties": {
        "AccountID": {
          "$ref": "#/definitions/conquest_apiAccountID"
        },
        "ObjectKey": {
          "$ref": "#/definitions/conquest_apiObjectKey"
        },
        "EffectivePermission": {
          "$ref": "#/definitions/conquest_apiPermission"
        },
        "FacilityPermission": {
          "$ref": "#/definitions/conquest_apiFacilityPermission"
        },
        "ObjectPermisions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/conquest_apiObjectPermission"
          }
        },
        "TypePermisions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/conquest_apiTypePermission"
          }
        }
      }
    },
    "conquest_apiEnumeration": {
      "type": "object",
      "properties": {
        "enumerationType": {
          "$ref": "#/definitions/conquest_apiEnumerationType",
          "title": "type is the DataType of the enumeration\nFor example:\n- If the proto type is Permission, then the type is Permission"
        },
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/conquest_apiEnumerationItem"
          }
        }
      },
      "description": "Enumeration is a description of the [enum] data types exposed in the API."
    },
    "conquest_apiEnumerationItem": {
      "type": "object",
      "properties": {
        "value": {
          "type": "integer",
          "format": "int32"
        },
        "tag": {
          "type": "string"
        },
        "displayValue": {
          "type": "string"
        }
      }
    },
    "conquest_apiEnumerationType": {
      "type": "string",
      "enum": [
        "EnumerationType_Unknown",
        "EnumerationType_ObjectType",
        "EnumerationType_ValueType",
        "EnumerationType_CompareOperator",
        "EnumerationType_FilterType",
        "EnumerationType_Permission",
        "EnumerationType_AccountType",
        "EnumerationType_ActionType",
        "EnumerationType_CostType",
        "EnumerationType_JobStatus",
        "EnumerationType_JobType",
        "EnumerationType_CalendarDurationUnit"
      ],
      "default": "EnumerationType_Unknown"
    },
    "conquest_apiEnvironmentProperties": {
      "type": "object",
      "properties": {
        "Hostname": {
          "type": "string",
          "title": "Hostname is System.Environment.MachineName in C#, os.Hostname() in golang"
        },
        "DataDirectory": {
          "type": "string"
        },
        "DataDirectoryToken": {
          "type": "string",
          "title": "DataDirectoryToken refers to the content in a file \"${DataDirectory}/.token\"\nit is used to check that the gateway and the api refer to the same directory"
        },
        "UploadsDirectory": {
          "type": "string"
        },
        "UploadsDirectoryToken": {
          "type": "string",
          "title": "UploadsDirectoryToken refers to the content in a file \"${UploadsDirectory}/.token\"\nit is used to check that the gateway and the api refer to the same directory"
        },
        "legacy_document_directories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/conquest_apiLegacyDocumentDirectory"
          }
        }
      }
    },
    "conquest_apiErrorResponse": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "error_description": {
          "type": "string"
        },
        "error_uri": {
          "type": "string"
        }
      }
    },
    "conquest_apiFacilityPermission": {
      "type": "object",
      "properties": {
        "AccountID": {
          "$ref": "#/definitions/conquest_apiAccountID"
        },
        "AssetID": {
          "type": "integer",
          "format": "int32"
        },
        "AssetDescription": {
          "type": "string"
        }
      }
    },
    "conquest_apiFieldCriterion": {
      "type": "object",
      "properties": {
        "Not": {
          "type": "boolean",
          "format": "boolean"
        },
        "FieldName": {
          "type": "string",
          "title": "view+column as defined by a Context for which this criterion is for"
        },
        "CompareOperator": {
          "$ref": "#/definitions/conquest_apiCompareOperator"
        },
        "Value": {
          "$ref": "#/definitions/conquest_apiAnyValue"
        }
      },
      "title": "FieldCriterion is a comparison that evaluates to true or false"
    },
    "conquest_apiFieldCriterionList": {
      "type": "object",
      "properties": {
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/conquest_apiFieldCriterion"
          }
        }
      }
    },
    "conquest_apiFilter": {
      "type": "object",
      "properties": {
        "FilterID": {
          "type": "integer",
          "format": "int32"
        },
        "Context": {
          "type": "string"
        },
        "FilterName": {
          "type": "string"
        },
        "FilterType": {
          "$ref": "#/definitions/conquest_apiFilterType"
        },
        "Usr": {
          "type": "string"
        },
        "System": {
          "type": "boolean",
          "format": "boolean"
        },
        "Description": {
          "type": "string"
        },
        "CategoryID": {
          "type": "integer",
          "format": "int32"
        },
        "AttributeID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "conquest_apiFilterType": {
      "type": "string",
      "enum": [
        "FilterType_UserView"
      ],
      "default": "FilterType_UserView"
    },
    "conquest_apiFindContextsResult": {
      "type": "object",
      "properties": {
        "ContextDescriptors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/conquest_apiContextDescriptor"
          }
        }
      }
    },
    "conquest_apiFindQuery": {
      "type": "object",
      "properties": {
        "ParameterObjectKey": {
          "$ref": "#/definitions/conquest_apiObjectKey"
        },
        "Context": {
          "type": "string",
          "description": "Context is a selection of fields with a predefined Criteria. It is like the 'from' clause if a SQL query, a set of \"joined tables\".\n\nContexts are defined in the Field Dictionary\n\nThis Context is parameterised with the ObjectID for it's respective ObjectType"
        },
        "FilterID": {
          "type": "integer",
          "format": "int32",
          "description": "The ID for a UserView. A UserView is constructed using the filter builder."
        },
        "FieldNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "FieldNames is the list of fields that will be returned in the RecordSet.\n\nIf empty, the default selection of fields will be provided. Otherwise the selected field names, if defined by\nthe Context, will be returned"
        },
        "Criteria": {
          "$ref": "#/definitions/conquest_apiCriteria",
          "title": "The Criteria that filters the Context"
        },
        "Limit": {
          "type": "integer",
          "format": "int32"
        },
        "X_IncludeRelatedContexts": {
          "type": "boolean",
          "format": "boolean"
        },
        "WithoutDefaultCriteria": {
          "type": "boolean",
          "format": "boolean",
          "description": "If true, the PredefinedContextCriteria, enabled by default are not applied."
        },
        "X_IncludeCoordinates": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "conquest_apiFindResult": {
      "type": "object",
      "properties": {
        "RecordSet": {
          "$ref": "#/definitions/conquest_apiRecordSet"
        },
        "X_RelatedContexts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/conquest_apiContextDescriptor"
          },
          "title": "X_RelatedContexts is a list of ContextDescriptors that the returned objects can use"
        }
      }
    },
    "conquest_apiGenerateDocumentLinkCommand": {
      "type": "object",
      "properties": {
        "ObjectKey": {
          "$ref": "#/definitions/conquest_apiObjectKey"
        },
        "DocumentID": {
          "type": "integer",
          "format": "int32"
        },
        "X_thumbnail_parameter": {
          "type": "string",
          "description": "Currently the only supported value is \"medium\"\n\nRegarding Blob Storage:\n\n    A thumbnail lives in a different container to the actual documents.\n\n    The thumbnail mount, that corresponds to another mount, has the suffix \".thumbnails\". For example: \"mount={mount}.thumbnails\"\n\n    The layout of a thumbnail container is the following\n\n        by_size/{size}/{blobName}\n\n    For example, for the given blob address (mount=default):\n\n        blob://default/Assets/1/image.png\n\n    The address for a 'medium' sized image will be:\n\n        blob://default.thumbnails/by_size/medium/Assets/1/image.png",
          "title": "When a thumbnail is desired, use set the thumbnail parameter"
        }
      }
    },
    "conquest_apiGenerateDocumentLinkResult": {
      "type": "object",
      "properties": {
        "LinkExpireTime": {
          "type": "string",
          "format": "date-time",
          "description": "Not implemented, tentative.\nLinks do have an expiry, assume 1 hour."
        },
        "Link": {
          "type": "string",
          "description": "Link is is an authenticated link.\nWhen applicable, the \"/download/document?object_type=...\u0026object_id=...\u0026document_id=...\" endpoint redirects you to (address in the Location header) to this same value."
        }
      }
    },
    "conquest_apiGeographyCoordinates": {
      "type": "object",
      "properties": {
        "longitude": {
          "type": "number",
          "format": "double",
          "title": "X"
        },
        "latitude": {
          "type": "number",
          "format": "double",
          "title": "Y"
        },
        "pin": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "conquest_apiGeographyCoordinatesValue": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/conquest_apiGeographyCoordinates"
        }
      }
    },
    "conquest_apiGetAccountPermissionsQuery": {
      "type": "object",
      "properties": {
        "AccountID": {
          "$ref": "#/definitions/conquest_apiAccountID"
        },
        "IncludeTypePermissions": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "conquest_apiGetActionCompletionDetailsRequest": {
      "type": "object",
      "properties": {
        "ActionID": {
          "type": "integer",
          "format": "int32"
        },
        "XIncludeCompletedSubActions": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "conquest_apiGetActionCompletionDetailsResponse": {
      "type": "object",
      "properties": {
        "Command": {
          "$ref": "#/definitions/conquest_apiCompleteActionCommand"
        },
        "Details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/conquest_apiActionCompletionDetails"
          }
        }
      }
    },
    "conquest_apiGetAttributeSetFieldNamesResponse": {
      "type": "object",
      "properties": {
        "FieldNames": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/conquest_apiAttributeSetFieldNames"
          }
        }
      }
    },
    "conquest_apiGetCodeListsQuery": {
      "type": "object",
      "properties": {
        "CodeListID": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "CodeListName": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "CodeID": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "description": "if CodeID is greater than zero, the CodeList for this Code will be loaded."
        }
      }
    },
    "conquest_apiGetCodeListsResult": {
      "type": "object",
      "properties": {
        "Lists": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/conquest_apiCodeList"
          }
        }
      }
    },
    "conquest_apiGetDocumentLocationResult": {
      "type": "object",
      "properties": {
        "ObjectKey": {
          "$ref": "#/definitions/conquest_apiObjectKey"
        },
        "DocumentID": {
          "type": "integer",
          "format": "int32"
        },
        "Address": {
          "type": "string"
        },
        "UploadStatus": {
          "$ref": "#/definitions/conquest_apiUploadStatus"
        }
      }
    },
    "conquest_apiGetDocumentsQuery": {
      "type": "object",
      "properties": {
        "ObjectKey": {
          "$ref": "#/definitions/conquest_apiObjectKey",
          "title": "ObjectKey for supported ObjectTypes: Asset, Action, Defect, Request, DocumentContainer"
        },
        "WithDocumentIDs": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "title": "WithDocumentIDs is used to specify the particular document records to retrieve, by the unique document timestamp 'CreateTime'"
        },
        "WithUploadStatus": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/conquest_apiUploadStatus"
          },
          "description": "If unset, all statuses will be shown.\nWhen rendering this list, only those with the Completed status are downloadable."
        },
        "WithCreateTimes": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "date-time"
          },
          "title": "WithCreateTimes is used to specify the particular document records to retrieve, by the unique document timestamp 'CreateTime'"
        }
      }
    },
    "conquest_apiGetDocumentsResult": {
      "type": "object",
      "properties": {
        "documents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/conquest_apiDocument"
          }
        }
      }
    },
    "conquest_apiGetHistoryItemsQuery": {
      "type": "object",
      "properties": {
        "ItemTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "RecentlyViewed": {
          "type": "boolean",
          "format": "boolean"
        },
        "Favourites": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "conquest_apiGetHistoryItemsResult": {
      "type": "object",
      "properties": {
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/conquest_apiUserHistoryItem"
          }
        }
      }
    },
    "conquest_apiGetJobStateRequest": {
      "type": "object",
      "properties": {
        "job_keys": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/conquest_apiJobKey"
          }
        }
      }
    },
    "conquest_apiGetJobStateResponse": {
      "type": "object",
      "properties": {
        "states": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/conquest_apiJobState"
          }
        }
      }
    },
    "conquest_apiGetSystemSettingsResult": {
      "type": "object",
      "properties": {
        "Settings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/conquest_apiSystemSetting"
          }
        }
      }
    },
    "conquest_apiGetUploadTokenReponse": {
      "type": "object",
      "properties": {
        "UploadToken": {
          "$ref": "#/definitions/conquest_apiUploadToken"
        }
      }
    },
    "conquest_apiGetUserPreferencesQuery": {
      "type": "object",
      "properties": {
        "Keys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Prefix": {
          "type": "string"
        }
      }
    },
    "conquest_apiGetUserPreferencesResult": {
      "type": "object",
      "properties": {
        "Preferences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/conquest_apiUserPreference"
          }
        }
      }
    },
    "conquest_apiGetViewResponse": {
      "type": "object",
      "properties": {
        "RecordSet": {
          "$ref": "#/definitions/conquest_apiRecordSet"
        }
      }
    },
    "conquest_apiInspection": {
      "type": "object",
      "properties": {
        "InspectionID": {
          "type": "integer",
          "format": "int32"
        },
        "InspectionDate": {
          "type": "string",
          "format": "date-time"
        },
        "Inspector": {
          "type": "string"
        },
        "Organisation": {
          "type": "string"
        },
        "InspectionType": {
          "type": "integer",
          "format": "int32",
          "title": "from the Inspection Type code list"
        },
        "InspectionNotes": {
          "type": "string"
        },
        "ObjectKey": {
          "$ref": "#/definitions/conquest_apiObjectKey"
        }
      }
    },
    "conquest_apiInspectionsForAssetQuery": {
      "type": "object",
      "properties": {
        "AssetID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "conquest_apiInspectionsForAssetResponse": {
      "type": "object",
      "properties": {
        "Inspections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/conquest_apiInspection"
          }
        }
      }
    },
    "conquest_apiItemLink": {
      "type": "object",
      "properties": {
        "ObjectKey": {
          "$ref": "#/definitions/conquest_apiObjectKey"
        },
        "LinkDescription": {
          "type": "string"
        },
        "IconAddress": {
          "type": "string"
        }
      }
    },
    "conquest_apiJobCreationDetails": {
      "type": "object",
      "properties": {
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "created_by": {
          "type": "string"
        },
        "device_id": {
          "type": "string"
        }
      },
      "description": "JobCreationDetails of the job when submitted. It doesn't change once created."
    },
    "conquest_apiJobError": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string",
          "title": "A short user friendly description of what went wrong.\nThis is empty unless the JobStatus is one of [JobStatus_Invalid, JobStatus_CompletedWithError, JobStatus_InterruptedWithError]"
        }
      }
    },
    "conquest_apiJobKey": {
      "type": "object",
      "properties": {
        "job_id": {
          "type": "string",
          "title": "aka. ProcessID/BatchID"
        },
        "job_type": {
          "$ref": "#/definitions/conquest_apiJobType"
        }
      },
      "description": "The unique key to reference the job. It is returned by all endpoints that submit a job."
    },
    "conquest_apiJobProgressInfo": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/conquest_apiJobStatus"
        },
        "last_updated": {
          "type": "string",
          "format": "date-time",
          "title": "The time that the state was last updated. State will update when one of the following changes.\na. job status, total_work, work_done, status_description\nd. the tracking info used by the job (eg. objects pending and objects created)"
        },
        "title": {
          "type": "string",
          "title": "The name of the process for quick identification by the user.\nDefaults to the display name of the JobType"
        },
        "total_work": {
          "type": "number",
          "format": "double",
          "description": "Total Units of work. Default is 1."
        },
        "work_done": {
          "type": "number",
          "format": "double",
          "description": "Units of work currently completed, progress of process is calculated using = WorkDone / TotalWork.\nDefault is 0."
        },
        "status_description": {
          "type": "string",
          "title": "/ A short user friendly description about what's currently happening\n/ Defaults to the display name of JobStatus"
        }
      }
    },
    "conquest_apiJobResult": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/conquest_apiJobError",
          "title": "error is the result when job has stopped and the status is one of\n[JobStatus_Invalid or JobStatus_CompletedWithError]"
        },
        "empty": {
          "properties": {}
        }
      },
      "title": "JobResult is set after the job has ended, that is, when the status is one of\n[JobStatus_Invalid, JobStatus_Completed, JobStatus_CompletedWithError]"
    },
    "conquest_apiJobState": {
      "type": "object",
      "properties": {
        "job_key": {
          "$ref": "#/definitions/conquest_apiJobKey"
        },
        "creation_details": {
          "$ref": "#/definitions/conquest_apiJobCreationDetails",
          "description": "creation_details for when this job was submitted."
        },
        "progress": {
          "$ref": "#/definitions/conquest_apiJobProgressInfo",
          "description": "The progress of the job. This changes during the lifecycle of the job."
        },
        "result": {
          "$ref": "#/definitions/conquest_apiJobResult",
          "title": "JobResult is set after the job has ended, that is, when the status is one of\n[JobStatus_Invalid, JobStatus_Completed, JobStatus_CompletedWithError]"
        }
      }
    },
    "conquest_apiJobStatus": {
      "type": "string",
      "enum": [
        "JobStatus_Unknown",
        "JobStatus_Invalid",
        "JobStatus_Scheduled",
        "JobStatus_Queued",
        "JobStatus_Processing",
        "JobStatus_Paused",
        "JobStatus_Interrupted",
        "JobStatus_InterruptedWithError",
        "JobStatus_Completed",
        "JobStatus_CompletedWithError",
        "JobStatus_Removed"
      ],
      "default": "JobStatus_Unknown",
      "description": " - JobStatus_Unknown: Unknown is an invalid state. Such a job should be logged and removed from processing.\n - JobStatus_Invalid: Invalid is an end state. It is used to report that a job is incorrectly parameterised.\nThe JobResult for this state is a JobError.\n - JobStatus_Completed: Completed is an end state.\n - JobStatus_CompletedWithError: CompletedWithError is an end state.\nThe JobResult for this state is not a JobError. If nothing is returned it will be JobResult.empty\n - JobStatus_Removed: CompletedWithError is an end state.\nThe JobResult for this state is a JobError."
    },
    "conquest_apiJobType": {
      "type": "string",
      "enum": [
        "JobType_Unknown",
        "JobType_Other",
        "JobType_CsvImport",
        "JobType_CompleteActions",
        "ForwardPlanningDateChange",
        "JobType_ConditionRecalculation",
        "JobType_DepreciationRecalculation",
        "JobType_IndexationUpdate",
        "JobType_Revaluation",
        "JobType_ReplacementCostModification",
        "JobType_TransactionRollback",
        "JobType_ExpiryDateRecalculation",
        "JobType_RiskRecalculation",
        "JobType_PostTransactions",
        "JobType_Bundler"
      ],
      "default": "JobType_Unknown",
      "description": "- JobType_CsvImport: Csv Import\n - JobType_CompleteActions: Action Completion\n - ForwardPlanningDateChange: Forward Planning Date Change\n - JobType_ConditionRecalculation: Condition Re-calculation\n - JobType_DepreciationRecalculation: Depreciation Re-calculation\n - JobType_IndexationUpdate: Indexation Update\n - JobType_Revaluation: Revaluation\n - JobType_ReplacementCostModification: Replacement Cost Modification\n - JobType_TransactionRollback: Transaction Rollback\n - JobType_ExpiryDateRecalculation: Expiry Date Re-calculation\n - JobType_RiskRecalculation: Risk Score Re-calculation\n - JobType_PostTransactions: Post Transactions\n - JobType_Bundler: Bundler (used for zipping stuff up)",
      "title": "Name these in such a way that it makes that sense to call it 'X Process'"
    },
    "conquest_apiLegacyDocumentDirectory": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "format": "boolean"
        },
        "mount": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "token": {
          "type": "string",
          "title": "TODO decide whether to still do this.\nthe content of the ${path}.token file that is used to verify that the gateway and child processes\nare in-fact referring to the same directory"
        }
      }
    },
    "conquest_apiListAttributeSetsQuery": {
      "type": "object",
      "properties": {
        "AttributeSetKeys": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/conquest_apiObjectKey"
          }
        },
        "ObjectType": {
          "$ref": "#/definitions/conquest_apiObjectType"
        },
        "IncludeUnsetFields": {
          "type": "boolean",
          "format": "boolean"
        }
      },
      "title": "AttributeSets can be queried using a number of different objects types.\nThe AttributeSet that will be returned is the one that relates to the ObjectKey"
    },
    "conquest_apiListDocumentLocationsQuery": {
      "type": "object"
    },
    "conquest_apiListDocumentLocationsResponse": {
      "type": "object",
      "properties": {
        "DocumentLocations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/conquest_apiDocumentContainer"
          }
        },
        "PreferredPrefix": {
          "type": "string",
          "title": "The PreferredPrefix is selected by default.\nIt does *not* mean production. Every configured location *is* production.\nIt \"can\" mean a sub folder!"
        }
      }
    },
    "conquest_apiListFiltersQuery": {
      "type": "object",
      "properties": {
        "FilterType": {
          "$ref": "#/definitions/conquest_apiFilterType"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "conquest_apiListFiltersResult": {
      "type": "object",
      "properties": {
        "Filters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/conquest_apiFilter"
          }
        }
      }
    },
    "conquest_apiListHierarchyNodesQuery": {
      "type": "object",
      "properties": {
        "ObjectKey": {
          "$ref": "#/definitions/conquest_apiObjectKey"
        },
        "IncludeChildren": {
          "type": "boolean",
          "format": "boolean"
        },
        "IncludeAncestors": {
          "type": "boolean",
          "format": "boolean"
        },
        "IncludeSiblings": {
          "type": "boolean",
          "format": "boolean"
        },
        "IncludeDescendents": {
          "type": "integer",
          "format": "int32"
        },
        "IncludeSubItems": {
          "type": "boolean",
          "format": "boolean",
          "title": "IncludeSubItems will include any items that are not the children but are defined for a particular object\nSuch items will have the particular object as the parent but have a different ObjectType to the parent"
        }
      },
      "description": "WARNING: IMPLEMENTATION INCOMPLETE (API 2.0.5)\n  Some endpoints may ignore the parameters below and return more data. DO NOT ASSUME IT WILL STAY THIS WAY.\n  Your code should always set the parameters below and assume the expected, not the actual data they currently return.",
      "title": "ListHierarchyNodesQuery gets a list of Hierarchy nodes (ObjectHeaders whose parent ObjectType is the same as the object's ObjectType"
    },
    "conquest_apiListStandardActionsQuery": {
      "type": "object",
      "properties": {
        "StdActionIDs": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "RequestAction": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "conquest_apiListStandardActionsResult": {
      "type": "object",
      "properties": {
        "StandardActions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/conquest_apiStandardActionEntity"
          }
        }
      }
    },
    "conquest_apiListStandardDefectResponsesQuery": {
      "type": "object",
      "properties": {
        "StdDefectIDs": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "conquest_apiListStandardDefectResponsesResult": {
      "type": "object",
      "properties": {
        "Severities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/conquest_apiStandardDefectSeverity"
          }
        }
      }
    },
    "conquest_apiListViewFieldsQuery": {
      "type": "object",
      "properties": {
        "Context": {
          "type": "string",
          "description": "A Context provides a set of fields available to a view which uses that Context.\nThese fields have a source (table or view) and an attribute (column)."
        }
      }
    },
    "conquest_apiLock": {
      "type": "object",
      "properties": {
        "Status": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "for an Asset, 'Read Only' or 'Disposed'\nfor an Action, 'Read Only', 'At Issue', ..., 'Completed'\nfor a Defect 'Read Only', 'Completed'"
        }
      }
    },
    "conquest_apiLogBookActionCompletionProcess": {
      "type": "object",
      "properties": {
        "NextLogStdActionID": {
          "type": "integer",
          "format": "int32"
        },
        "NextLogActionDueDate": {
          "type": "string",
          "format": "date-time"
        },
        "NextLogMeterReading": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "conquest_apiMasterActionCompletionProcess": {
      "type": "object",
      "properties": {
        "NextRepeatableDate": {
          "type": "string",
          "format": "date-time"
        },
        "CreateMasterForRepeatableSubActions": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "conquest_apiMoveActionCommand": {
      "type": "object",
      "properties": {
        "ActionID": {
          "type": "integer",
          "format": "int32"
        },
        "AssetID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "conquest_apiMoveAssetCommand": {
      "type": "object",
      "properties": {
        "AssetID": {
          "type": "integer",
          "format": "int32"
        },
        "ParentID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "conquest_apiNewConditionInspectionCommand": {
      "type": "object",
      "properties": {
        "AssetID": {
          "type": "integer",
          "format": "int32"
        },
        "Inspection": {
          "$ref": "#/definitions/conquest_apiInspection"
        }
      }
    },
    "conquest_apiObjectAttribute": {
      "type": "object",
      "properties": {
        "ObjectAttributeKind": {
          "$ref": "#/definitions/conquest_apiObjectAttributeKind"
        },
        "ObjectType": {
          "$ref": "#/definitions/conquest_apiObjectType"
        },
        "ValueType": {
          "$ref": "#/definitions/conquest_apiValueType"
        },
        "Path": {
          "type": "string",
          "title": "column"
        },
        "Nullable": {
          "type": "boolean",
          "format": "boolean"
        },
        "Caption": {
          "type": "string"
        },
        "PrimaryKey": {
          "type": "boolean",
          "format": "boolean"
        },
        "ForeignObjectType": {
          "$ref": "#/definitions/conquest_apiObjectType"
        },
        "ForeignObjectPath": {
          "type": "string"
        },
        "ParameterType": {
          "$ref": "#/definitions/conquest_apiObjectAttributeParameterType"
        },
        "Parameter": {
          "type": "string",
          "title": "The Parameter string that conforms to the ParameterType"
        }
      },
      "description": "ObjectAttribute is a description of an attribute on one of the ObjectTypes.\n\nObjectAttribute is experimental at the moment for the reason that the actual values it returns\nis subject to change as we work on making the following fields correct/consistent.\n\nValueType, Nullable, Parameter"
    },
    "conquest_apiObjectAttributeKind": {
      "type": "string",
      "enum": [
        "ObjectAttributeKind_Value",
        "ObjectAttributeKind_Calculated"
      ],
      "default": "ObjectAttributeKind_Value"
    },
    "conquest_apiObjectAttributeParameterType": {
      "type": "string",
      "enum": [
        "ObjectAttributeParameterType_Unknown",
        "ObjectAttributeParameterType_CodeListID",
        "ObjectAttributeParameterType_CodeListName",
        "ObjectAttributeParameterType_EnumerationValue",
        "ObjectAttributeParameterType_EnumerationDisplayName",
        "ObjectAttributeParameterType_CodeID"
      ],
      "default": "ObjectAttributeParameterType_Unknown",
      "title": "An ObjectAttribute may be parameterised, ObjectAttributeParameterType indicates how a parameter is interpreted"
    },
    "conquest_apiObjectHeader": {
      "type": "object",
      "properties": {
        "ObjectName": {
          "type": "string"
        },
        "ObjectKey": {
          "$ref": "#/definitions/conquest_apiObjectKey",
          "title": "ObjectKey of this object"
        },
        "ParentKey": {
          "$ref": "#/definitions/conquest_apiObjectKey",
          "title": "ParentKey refers to the parent that this object is for"
        },
        "TypeKey": {
          "$ref": "#/definitions/conquest_apiObjectKey",
          "title": "TypeKey refers to the type which determines this object's business rules"
        },
        "AttributeSetKey": {
          "$ref": "#/definitions/conquest_apiObjectKey",
          "title": "AttributeSetKey refers to the attribute set which describes this object's shape"
        }
      },
      "description": "ObjectHeader is the name of the object and it's relation to other objects that are a primary part of it's description.\n\nThe object for an ObjectHeader is a Hierarchy node if the parent's ObjectType is the same as the object's ObjectType"
    },
    "conquest_apiObjectHeadersResult": {
      "type": "object",
      "properties": {
        "Headers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/conquest_apiObjectHeader"
          }
        },
        "X_RelatedContexts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/conquest_apiContextDescriptor"
          },
          "title": "X_RelatedContexts is a list of ContextDescriptors that the returned objects can use"
        },
        "X_DataIsComplete": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "conquest_apiObjectKey": {
      "type": "object",
      "properties": {
        "objectType": {
          "$ref": "#/definitions/conquest_apiObjectType"
        },
        "int32Value": {
          "type": "integer",
          "format": "int32"
        },
        "stringValue": {
          "type": "string"
        },
        "timestampValue": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "conquest_apiObjectKeyValue": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/conquest_apiObjectKey"
        }
      }
    },
    "conquest_apiObjectPermission": {
      "type": "object",
      "properties": {
        "AccountID": {
          "$ref": "#/definitions/conquest_apiAccountID"
        },
        "Permission": {
          "$ref": "#/definitions/conquest_apiPermission"
        },
        "ObjectType": {
          "$ref": "#/definitions/conquest_apiObjectType"
        },
        "ObjectDescription": {
          "type": "string"
        }
      }
    },
    "conquest_apiObjectRelation": {
      "type": "object",
      "properties": {
        "a": {
          "$ref": "#/definitions/conquest_apiObjectKey"
        },
        "b": {
          "$ref": "#/definitions/conquest_apiObjectKey"
        }
      },
      "description": "ObjectRelation specifies a link between objects, it does not specify a direction of the relationship.\nThe default direction of the relationship is chosen.\n\nExamples of directions\n    a --\u003e b\n    a \u003c-- b\n    a \u003c-\u003e b"
    },
    "conquest_apiObjectType": {
      "type": "string",
      "enum": [
        "ObjectType_None",
        "ObjectType_Asset",
        "ObjectType_Action",
        "ObjectType_Request",
        "ObjectType_Defect",
        "ObjectType_LogBook",
        "ObjectType_LogReading",
        "ObjectType_CyclicAction",
        "ObjectType_Inspection",
        "ObjectType_OrganisationUnit",
        "ObjectType_Contractor",
        "ObjectType_Filter",
        "ObjectType_View",
        "ObjectType_Query",
        "ObjectType_Report",
        "ObjectType_RiskEvent",
        "ObjectType_InspectionProgram",
        "ObjectType_Location",
        "ObjectType_Function",
        "ObjectType_Resource",
        "ObjectType_ResourceAssignment",
        "ObjectType_Hierarchy",
        "ObjectType_CodeField",
        "ObjectType_Code",
        "ObjectType_Document",
        "ObjectType_DiaryEntry",
        "ObjectType_DeteriorationCurve",
        "ObjectType_ValuationTransaction",
        "ObjectType_DocumentContainer",
        "ObjectType_ConditionInspection",
        "ObjectType_AssetInspection",
        "ObjectType_DefectInspection",
        "ObjectType_AssetType",
        "ObjectType_StandardAction",
        "ObjectType_StandardDefect",
        "ObjectType_StandardInspection",
        "ObjectType_StandardRiskEvent",
        "ObjectType_ActionCategory",
        "ObjectType_AttributeSet"
      ],
      "default": "ObjectType_None",
      "description": "- ObjectType_Asset: AssetEntity\n - ObjectType_Action: ActionEntity\n - ObjectType_Request: RequestEntity\n - ObjectType_Defect: DefectEntity\n - ObjectType_InspectionProgram: InspectionProgram (HPC key)\n - ObjectType_Location: Values\n - ObjectType_ResourceAssignment: ResourceAssignment is a resource entry on an Action\n - ObjectType_ConditionInspection: A ConditionInspection saves attributes (under InspectionHististory.(InspectionID,AssetID) ) of the current Asset record to history\n - ObjectType_AssetInspection: An AssetInspection saves attributes (under AssetInspection.(AssetID+InspectionID) ) for a given StandardInspection\n - ObjectType_DefectInspection: A DefectInspection saves attributes of a Defect (under DefectInspectionXRef.(Defect+InspectionID) ) to history\n - ObjectType_AssetType: Archetypes / Templates / Descriptions",
      "title": "ObjectType is for an object of a type with an ID that we can reference"
    },
    "conquest_apiPermission": {
      "type": "string",
      "enum": [
        "Permission_NotSet",
        "Permission_NoAccess",
        "Permission_ReadOnly",
        "Permission_Edit"
      ],
      "default": "Permission_NotSet"
    },
    "conquest_apiPermissionsForObjectQuery": {
      "type": "object",
      "properties": {
        "AccountID": {
          "$ref": "#/definitions/conquest_apiAccountID"
        },
        "ObjectKey": {
          "$ref": "#/definitions/conquest_apiObjectKey"
        }
      }
    },
    "conquest_apiPredefinedContextCriteria": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "EnabledByDefault": {
          "type": "boolean",
          "format": "boolean",
          "description": "EnabledByDefault specifies whether the filter is applied to a Context is no preference is specified."
        },
        "Criteria": {
          "$ref": "#/definitions/conquest_apiCriteria"
        }
      },
      "title": "PredefinedContextCriteria is a filter applied to a Context"
    },
    "conquest_apiRecordColumn": {
      "type": "object",
      "properties": {
        "alias": {
          "type": "string",
          "description": "alias is the column name or SQL alias in a query or user view.\n\n- An alias with a prefix of 2 underscores '__' are reserved for Conquest. These fields are subject to change, they're a temporary solution\n  For example, __Title, __Subtitle\n\nWARNING alias is not finalized, don't write code that depends on it.\n\nview.column for non-calculated values defined in a Context (a selection of fields in the Field Dictionary)"
        },
        "caption": {
          "type": "string",
          "title": "caption == alias in a user view by default"
        },
        "valueType": {
          "$ref": "#/definitions/conquest_apiValueType",
          "title": "If ValueType == ObjectKey, Relation is always set"
        },
        "relation": {
          "$ref": "#/definitions/conquest_apiRelation"
        },
        "identity": {
          "type": "boolean",
          "format": "boolean",
          "title": "A list of [RecordColumn]s have multiple ValueType=ObjectKey. Identity states that\nthis RecordColumn is the identity a RecordRow"
        },
        "group": {
          "type": "integer",
          "format": "int32",
          "title": "For a polymorphic RecordSet this denotes the column group"
        },
        "index": {
          "type": "integer",
          "format": "int32",
          "title": "index is always set to a value 0 to n-1, where n is the row length of a column group"
        }
      }
    },
    "conquest_apiRecordRow": {
      "type": "object",
      "properties": {
        "columns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/conquest_apiAnyValue"
          }
        },
        "group": {
          "type": "integer",
          "format": "int32",
          "title": "For a polymorphic RecordSet this denotes the column group"
        }
      }
    },
    "conquest_apiRecordSet": {
      "type": "object",
      "properties": {
        "columns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/conquest_apiRecordColumn"
          }
        },
        "rows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/conquest_apiRecordRow"
          }
        },
        "contextDescriptor": {
          "$ref": "#/definitions/conquest_apiContextDescriptor"
        },
        "cursor": {
          "$ref": "#/definitions/conquest_apiRecordSetCursor"
        }
      },
      "title": "In a RecordSet, for a column_group, the column order in columns list corresponds with the columns in a record row"
    },
    "conquest_apiRecordSetCursor": {
      "type": "object",
      "properties": {
        "more": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "conquest_apiRelateResult": {
      "type": "object"
    },
    "conquest_apiRelation": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "title": "path is the name of the field on an object, for example, given an ObjectType of Asset, it could be AssetDescription"
        },
        "objectType": {
          "$ref": "#/definitions/conquest_apiObjectType"
        }
      },
      "title": "Relation refers to an attribute on an object"
    },
    "conquest_apiRemoveDocumentCommand": {
      "type": "object",
      "properties": {
        "ObjectKey": {
          "$ref": "#/definitions/conquest_apiObjectKey"
        },
        "DocumentID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "conquest_apiRequestEntity": {
      "type": "object",
      "properties": {
        "ArqID": {
          "type": "integer",
          "format": "int32"
        },
        "Record": {
          "$ref": "#/definitions/conquest_apiRequestRecord"
        },
        "ReferenceID": {
          "type": "string"
        },
        "Completed": {
          "type": "boolean",
          "format": "boolean"
        },
        "CompletedBy": {
          "type": "string"
        },
        "Editor": {
          "type": "string"
        },
        "EditDate": {
          "type": "string",
          "format": "date-time"
        },
        "lock": {
          "$ref": "#/definitions/conquest_apiLock"
        }
      },
      "title": "RequestEntity is comprised of the Request's Record and auxiliary fields (calculated, related)"
    },
    "conquest_apiRequestRecord": {
      "type": "object",
      "properties": {
        "Account": {
          "type": "string"
        },
        "Address": {
          "type": "string"
        },
        "OrganisationUnitID": {
          "type": "integer",
          "format": "int32"
        },
        "CompletionDate": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "DateRequired": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "DocumentReference": {
          "type": "string"
        },
        "Email": {
          "type": "string"
        },
        "EntryDate": {
          "type": "string",
          "format": "date-time"
        },
        "Fax": {
          "type": "string"
        },
        "HomePhone": {
          "type": "string"
        },
        "Location": {
          "type": "string"
        },
        "MobilePhone": {
          "type": "string"
        },
        "PostCode": {
          "type": "string"
        },
        "ReceivedBy": {
          "type": "string"
        },
        "ReceivedMethod": {
          "type": "integer",
          "format": "int32"
        },
        "RequestDetail": {
          "type": "string"
        },
        "RequestCategory": {
          "type": "integer",
          "format": "int32"
        },
        "RequestorType": {
          "type": "integer",
          "format": "int32"
        },
        "Response": {
          "type": "integer",
          "format": "int32"
        },
        "Status": {
          "type": "integer",
          "format": "int32"
        },
        "Suburb": {
          "type": "string"
        },
        "Urgency": {
          "type": "integer",
          "format": "int32"
        },
        "WorkPhone": {
          "type": "string"
        },
        "RequestorName": {
          "type": "string"
        },
        "LocationCoordinates": {
          "$ref": "#/definitions/conquest_apiGeographyCoordinatesValue",
          "title": "LocationCoordinates is a pin/point that defaults to the centroid on the Asset's geography object"
        }
      },
      "description": "DefectRecord is a selection of fields that may be modified directly."
    },
    "conquest_apiRequestRecordChangeSet": {
      "type": "object",
      "properties": {
        "RequestID": {
          "type": "integer",
          "format": "int32"
        },
        "LastEdit": {
          "type": "string",
          "format": "date-time"
        },
        "Changes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Original": {
          "$ref": "#/definitions/conquest_apiRequestRecord"
        },
        "Updated": {
          "$ref": "#/definitions/conquest_apiRequestRecord"
        }
      }
    },
    "conquest_apiReverseActionCompletionCommand": {
      "type": "object",
      "properties": {
        "ActionID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "conquest_apiReverseActionCompletionResult": {
      "type": "object"
    },
    "conquest_apiSessionSummary": {
      "type": "object",
      "properties": {
        "Username": {
          "type": "string",
          "title": "Your login from Conquest Services"
        },
        "ApiVersion": {
          "type": "string"
        },
        "ApplicationDatabase": {
          "type": "string",
          "title": "The database you are connected to"
        },
        "ApplicationUsername": {
          "type": "string",
          "title": "The username specified in the database you are connected to\n- For a site-installation, this will likely be your Active Directory login\n- For a cloud installatino, this will be the same as your Conquest Services login"
        },
        "ApplicationFullName": {
          "type": "string"
        },
        "IsProductionApplication": {
          "type": "boolean",
          "format": "boolean"
        },
        "IsProductionDatabase": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "conquest_apiSetPermissionsCommand": {
      "type": "object",
      "properties": {
        "AccountID": {
          "$ref": "#/definitions/conquest_apiAccountID"
        },
        "EffectivePermission": {
          "$ref": "#/definitions/conquest_apiPermission"
        },
        "FacilityPermission": {
          "$ref": "#/definitions/conquest_apiFacilityPermission"
        },
        "ObjectPermisions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/conquest_apiObjectPermission"
          }
        },
        "TypePermisions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/conquest_apiObjectPermission"
          }
        }
      }
    },
    "conquest_apiSimpleActionCompletionProcess": {
      "type": "object",
      "properties": {
        "NextRepeatableDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "conquest_apiStandardActionEntity": {
      "type": "object",
      "properties": {
        "StdActionID": {
          "type": "integer",
          "format": "int32"
        },
        "Record": {
          "$ref": "#/definitions/conquest_apiStandardActionRecord"
        },
        "TypeID": {
          "type": "integer",
          "format": "int32"
        },
        "Deleted": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "conquest_apiStandardActionRecord": {
      "type": "object",
      "properties": {
        "StdActionDescription": {
          "type": "string"
        },
        "ActionType": {
          "$ref": "#/definitions/conquest_apiActionType"
        },
        "ActionCategory": {
          "type": "integer",
          "format": "int32"
        },
        "RequestResponse": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "conquest_apiStandardDefectResponse": {
      "type": "object",
      "properties": {
        "SeverityID": {
          "type": "integer",
          "format": "int32"
        },
        "HierarchyID": {
          "type": "integer",
          "format": "int32"
        },
        "DurationUnit": {
          "$ref": "#/definitions/conquest_apiCalendarDurationUnit"
        },
        "Duration": {
          "type": "integer",
          "format": "int32"
        },
        "Score": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "conquest_apiStandardDefectSeverity": {
      "type": "object",
      "properties": {
        "SeverityID": {
          "type": "integer",
          "format": "int32"
        },
        "StdDefectID": {
          "type": "integer",
          "format": "int32"
        },
        "Severity": {
          "type": "string"
        },
        "Responses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/conquest_apiStandardDefectResponse"
          }
        }
      }
    },
    "conquest_apiStringList": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "conquest_apiSystemSetting": {
      "type": "object",
      "properties": {
        "Key": {
          "type": "string"
        },
        "Value": {
          "type": "string"
        }
      }
    },
    "conquest_apiSystemVersionResponse": {
      "type": "object",
      "properties": {
        "SupportedDatabaseObjectsVersion": {
          "type": "string"
        },
        "ConquestVersion": {
          "type": "string"
        },
        "ConquestAPIVersion": {
          "type": "string"
        }
      }
    },
    "conquest_apiTimestampValue": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "format": "date-time",
          "description": "The Timestamp value."
        }
      }
    },
    "conquest_apiTypePermission": {
      "type": "object",
      "properties": {
        "AccountID": {
          "$ref": "#/definitions/conquest_apiAccountID"
        },
        "Permission": {
          "$ref": "#/definitions/conquest_apiPermission"
        },
        "TypeID": {
          "type": "integer",
          "format": "int32"
        },
        "TypeDescription": {
          "type": "string"
        }
      }
    },
    "conquest_apiUUID": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        }
      }
    },
    "conquest_apiUUIDValue": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/conquest_apiUUID"
        }
      }
    },
    "conquest_apiUpdateUserPreferencesCommand": {
      "type": "object",
      "properties": {
        "Preferences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/conquest_apiUserPreference"
          }
        }
      }
    },
    "conquest_apiUploadStatus": {
      "type": "string",
      "enum": [
        "UploadStatus_NotStarted",
        "UploadStatus_Error",
        "UploadStatus_Uploading",
        "UploadStatus_Received",
        "UploadStatus_Completed"
      ],
      "default": "UploadStatus_NotStarted"
    },
    "conquest_apiUploadToken": {
      "type": "object",
      "properties": {
        "ObjectKey": {
          "$ref": "#/definitions/conquest_apiObjectKey"
        },
        "Token": {
          "type": "string"
        },
        "Status": {
          "$ref": "#/definitions/conquest_apiUploadStatus"
        },
        "Address": {
          "type": "string"
        }
      }
    },
    "conquest_apiUri": {
      "type": "object",
      "properties": {
        "uri": {
          "type": "string"
        }
      }
    },
    "conquest_apiUriValue": {
      "type": "object",
      "properties": {
        "uri": {
          "$ref": "#/definitions/conquest_apiUri"
        }
      }
    },
    "conquest_apiUserHistoryItem": {
      "type": "object",
      "properties": {
        "Link": {
          "$ref": "#/definitions/conquest_apiItemLink",
          "title": "string Username = 1;"
        },
        "LastUsed": {
          "type": "string",
          "format": "date-time",
          "title": "LastUsed is the last time a form was opened"
        },
        "Order": {
          "type": "integer",
          "format": "int32",
          "title": "Order, if a history item has an order, it is a \"pinned item\", otherwise it is a \"recent item\""
        }
      }
    },
    "conquest_apiUserPreference": {
      "type": "object",
      "properties": {
        "Key": {
          "type": "string"
        },
        "Value": {
          "type": "string"
        }
      }
    },
    "conquest_apiValueType": {
      "type": "string",
      "enum": [
        "ValueType_Unknown",
        "ValueType_String",
        "ValueType_Boolean",
        "ValueType_Number",
        "ValueType_Int32",
        "ValueType_Int64",
        "ValueType_Decimal",
        "ValueType_Date",
        "ValueType_DateTime",
        "ValueType_Duration",
        "ValueType_Code",
        "ValueType_Hierarchy",
        "ValueType_ObjectKey",
        "ValueType_Enumeration",
        "ValueType_StringList",
        "ValueType_GeographyCoordinate",
        "ValueType_Uri",
        "ValueType_Uuid"
      ],
      "default": "ValueType_Unknown",
      "description": "ValueType summaries all the basic data types that all other datatypes/objects/commands\nare build up from.\n\nEach of these data types have two representations in the AnyValue type as follows\n\nIf a value is required in an object, then the data type is as is. For a String, the data type is:\n\n  string\n\n  the default value is an empty string \"\"\n\nIf a value is optional in an object, then the data type is a container with a 'value' attribute\nFor a String the container type is StringValue, it looks like:\n\n  { value: string }\n\n  the default value is NULL (no container)\n\n - ValueType_String: string\n - ValueType_Boolean: bool\n - ValueType_Number: double\n - ValueType_Int32: int32 aka. int\n - ValueType_Int64: int64 aka. long, bigint\n - ValueType_Decimal: decimal aka. money/currency, fixed-precision\n - ValueType_Date: Timestamp\n - ValueType_DateTime: Timestamp\n - ValueType_Duration: int64 milliseconds, use this to encode TimeStans\n - ValueType_Code: Code (int32) is an item in a user definable list.\n - ValueType_Hierarchy: Hierarchy (ObjectKey) is an item in a hierarchy such as an Asset tree, the Asset Priority hierarchy lists and Action Categories.\n - ValueType_ObjectKey: ObjectKey is an item with an ID and a type such as an Asset, AssetType, View, Document and DocumentContainer (eg. folder). See ObjectTypes.\n - ValueType_Enumeration: Enumeration (int32) is fixed size ordered list of values. Enumerations have specific business rules attached."
    },
    "conquest_apiViewContext": {
      "type": "object",
      "properties": {
        "Context": {
          "type": "string"
        },
        "ViewFields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/conquest_apiViewField"
          }
        }
      }
    },
    "conquest_apiViewField": {
      "type": "object",
      "properties": {
        "ObjectAttribute": {
          "$ref": "#/definitions/conquest_apiObjectAttribute",
          "title": "ObjectAttribute describes the Field\nTODO review, should this be FieldID instead?"
        },
        "ContextPath": {
          "type": "string",
          "description": "The ContextPath is the identifier for a field for a given Context. This value takes the form ' view.column', for example 'v_Assets.AssetID'."
        }
      }
    },
    "conquest_apiWhoAmIResponse": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        }
      }
    },
    "conquest_api_configBlobStore": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "format": "boolean"
        },
        "description": {
          "type": "string"
        },
        "mount": {
          "type": "string",
          "title": "A mount is a location. Mounting is the attaching of an additional file system to an application.\nYou refer to a file in a mount with the scheme 'blob://{mount}/{relativeFilePath}'"
        },
        "type": {
          "type": "string",
          "title": "'azure' provider will store documents in the container\n'local' provider will store documents in the {DataDirectory}/BlobStorage directory or"
        },
        "permissions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "blob_store_mode": {
          "$ref": "#/definitions/conquest_api_configBlobStoreMode"
        }
      }
    },
    "conquest_api_configBlobStoreMode": {
      "type": "string",
      "enum": [
        "BlobStoreMode_Redirect",
        "BlobStoreMode_Gateway"
      ],
      "default": "BlobStoreMode_Redirect",
      "title": "- BlobStoreMode_Redirect: Clients will receive and be redirected to the blob location\n - BlobStoreMode_Gateway: Clients will download and upload from the blob location, via the API"
    },
    "conquest_api_configConquestDevelopmentStaffConfigurationOptions": {
      "type": "object",
      "properties": {
        "services_address": {
          "type": "string",
          "title": "services_address: (default = https://services.conquest-solutions.com.au)\n  You can override this for testing usually we point it to \"https://localhost:44302/\" on a developer machine"
        },
        "rules_engine_address": {
          "type": "string",
          "description": "rulesEngineAddress: (default = localhost:9090)\n  The address of the Conquest API Rules Engine. The Gateway forwards requests to this port.\n\n !!IMPORTANT!! DO NOT EXPOSE THIS PORT TO THE INTERNET IT IS PRIVATE TO THE MACHINE"
        }
      }
    },
    "conquest_api_configDatabaseConnection": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "format": "boolean"
        },
        "name": {
          "type": "string",
          "title": "name: (required)\n  The name that will appear in the connection list"
        },
        "connection_string": {
          "type": "string",
          "description": "example: \"Database=Conquest; Integrated Security=True; Server=.;\"",
          "title": "connectionString: (required)\n  The following properties are supported:\n  - Username\n  - Password\n  - Integrated Security = true or false\n  - Server\n  - Database"
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "conquest_api_configEventSource": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "format": "boolean"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "description": "'azureeventgrid' provider will receive events from a topic you've set up in Azure."
    },
    "conquest_api_configLogging": {
      "type": "object",
      "properties": {
        "verbosity": {
          "type": "string",
          "description": "valid values in order of noisy: debug|info|warn|error",
          "title": "verbosity: (default = debug)\n  This setting changes the verbosity (noise) for log messages. 'debug' is the noisiest. If you're having problems\n  this is the setting you want to see everything that's happening"
        },
        "path": {
          "type": "string",
          "title": "path: (default = ./conquest.log)"
        }
      }
    },
    "conquest_api_configServicesClientCredentials": {
      "type": "object",
      "properties": {
        "client_id": {
          "type": "string",
          "title": "This is a \"Username\" for your instance of the Conquest API"
        },
        "client_secret": {
          "type": "string",
          "title": "This is a password for your instance of the Conquest API"
        }
      },
      "description": "These can be obtained by either of the following methods:\n- Registering your instance of the Conquest API in the Services Portal and adding\n  the credentials manually here\n- Using the [Link] task in the Conquest Management Console",
      "title": "ServicesCredentials are the used to connect the Conquest API to services.\nThese are required to host the API. It is used for tasks like\n- Authentication\n- Matching Mobile users with self-hosted APIs\n- Retrieving user and company preferences\n- Submitting service statistics and error logs"
    }
  }
}
